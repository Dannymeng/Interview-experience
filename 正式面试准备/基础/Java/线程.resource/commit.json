{"compress":true,"commitItems":[["9a23e716-9c60-421c-9820-4aaea384c440",1570988348669,"",[[1570988290712,["28447@DESKTOP-BE7HQ26",[[1,0,"# 线程\n\n\n\n"]],[0,0],[7,7]]],[1570988295665,["28447@DESKTOP-BE7HQ26",[[-1,7,"\n"],[1,8,"创建"]],[7,7],[9,9]]],[1570988301751,["28447@DESKTOP-BE7HQ26",[[1,9,"线程的四种方式和区别"]],[9,9],[19,19]]],[1570988302006,["28447@DESKTOP-BE7HQ26",[[1,19,"\n\n"]],[19,19],[20,20]]],[1570988304386,["28447@DESKTOP-BE7HQ26",[[-1,20,"\n"],[1,21,"-"]],[20,20],[21,21]]],[1570988316433,["28447@DESKTOP-BE7HQ26",[[1,21," 继承Thread类\n- 实现run"]],[21,21],[39,39]]],[1570988317141,["28447@DESKTOP-BE7HQ26",[[-1,36,"run"]],[39,39],[36,36]]],[1570988322352,["28447@DESKTOP-BE7HQ26",[[1,36,"Runnableji"]],[36,36],[46,46]]],[1570988322845,["28447@DESKTOP-BE7HQ26",[[-1,44,"ji"]],[46,46],[44,44]]],[1570988340677,["28447@DESKTOP-BE7HQ26",[[1,44,"接口创建线程\n- 使用Callableh"]],[44,44],[64,64]]],[1570988341007,["28447@DESKTOP-BE7HQ26",[[-1,63,"h"]],[64,64],[63,63]]],[1570988347592,["28447@DESKTOP-BE7HQ26",[[1,63,"和Futurech"]],[63,63],[72,72]]],[1570988348261,["28447@DESKTOP-BE7HQ26",[[-1,70,"ch"]],[72,72],[70,70]]],[1570988351199,["28447@DESKTOP-BE7HQ26",[[1,70,"创建线程"]],[70,70],[74,74]]],[1570988356343,["28447@DESKTOP-BE7HQ26",[[-1,12,"四种"]],[13,13],[12,12]]],[1570988358813,["28447@DESKTOP-BE7HQ26",[[1,72,"\n- "]],[72,72],[75,75]]],[1570988359443,["28447@DESKTOP-BE7HQ26",[[-1,73,"- "],[1,75,"\n\n"]],[75,75],[74,74]]],[1570988359637,["28447@DESKTOP-BE7HQ26",[[1,75,"\n"]],[74,74],[75,75]]]],null,"28447@DESKTOP-BE7HQ26"],["9c665346-dc2f-4776-aaff-bc4cb534190f",1571039776065,"# 线程\n\n\n创建线程的方式和区别\n- 继承Thread类\n- 实现Runnable接口创建线程\n- 使用Callable和Future创建线程\n\n\n\n",[[1571039718335,["28447@DESKTOP-BE7HQ26",[[1,73,"- \n"]],[72,72],[75,75]]],[1571039718373,["28447@DESKTOP-BE7HQ26",[[-1,73,"- "]],[75,75],[74,74]]]],null,"28447@DESKTOP-BE7HQ26"],["98a0b5b6-193e-4654-82a8-89e6b755fe29",1571493528219,"# 线程\n\n\n创建线程的方式和区别\n- 继承Thread类\n- 实现Runnable接口创建线程\n- 使用Callable和Future创建线程\n\n\n\n\n",[[1571493487593,["28447@DESKTOP-BE7HQ26",[[1,73,"- \n"]],[72,72],[75,75]]],[1571493487633,["28447@DESKTOP-BE7HQ26",[[-1,73,"- "]],[75,75],[74,74]]],[1571493487806,["28447@DESKTOP-BE7HQ26",[[1,78,"\n"]],[74,74],[75,75]]],[1571493487984,["28447@DESKTOP-BE7HQ26",[[1,79,"\n"]],[75,75],[76,76]]],[1571493489900,["28447@DESKTOP-BE7HQ26",[[1,80,"\n"]],[75,75],[76,76]]],[1571493490145,["28447@DESKTOP-BE7HQ26",[[1,81,"\n"]],[76,76],[77,77]]]],null,"28447@DESKTOP-BE7HQ26"],["e12857c4-a238-4a36-a112-5ac610f55e49",1573537194720,"# 线程\n\n\n创建线程的方式和区别\n- 继承Thread类\n- 实现Runnable接口创建线程\n- 使用Callable和Future创建线程\n\n\n\n\n\n\n\n\n\n",[[1573537192805,["28447@DESKTOP-BE7HQ26",[[1,2,"实现"]],[2,2],[4,4]]],[1573537198462,["28447@DESKTOP-BE7HQ26",[[1,6,"的3中方法"]],[6,6],[11,11]]],[1573537199338,["28447@DESKTOP-BE7HQ26",[[-1,7,"3中方法"]],[11,11],[7,7]]],[1573537202750,["28447@DESKTOP-BE7HQ26",[[1,7,"3种方式"]],[7,7],[11,11]]],[1573537209182,["28447@DESKTOP-BE7HQ26",[[-1,21,"和区别"]],[24,24],[21,21]]],[1573537216380,["28447@DESKTOP-BE7HQ26",[[1,79,"1. 集成"]],[79,79],[84,84]]],[1573537217365,["28447@DESKTOP-BE7HQ26",[[-1,82,"集成"]],[84,84],[82,82]]],[1573537222944,["28447@DESKTOP-BE7HQ26",[[1,82,"继承Thread类"]],[82,82],[91,91]]],[1573537389699,["28447@DESKTOP-BE7HQ26",[[1,92,"看jdk源码可以发现，Thread类其实是实现了Runnable接口的一个实例，继承Thread类后需要重写run方法并通过start方法启动线程。继承Thread类耦合性太强了，因为java只能单继承，所以不利于扩展。"]],[92,92],[202,202]]],[1573537405057,["28447@DESKTOP-BE7HQ26",[[-1,79,"1."]],[81,81],[79,79]]],[1573537406011,["28447@DESKTOP-BE7HQ26",[[1,79,"##"]],[79,79],[81,81]]],[1573537413294,["28447@DESKTOP-BE7HQ26",[[1,204,"```"]],[204,204],[207,207]]],[1573537413319,["28447@DESKTOP-BE7HQ26",[[1,207,"language\n```\n"]],[207,207],[207,215]]],[1573537414265,["28447@DESKTOP-BE7HQ26",[[-1,207,"language"],[1,215,"j"]],[207,215],[208,208]]],[1573537414575,["28447@DESKTOP-BE7HQ26",[[1,208,"ava"]],[208,208],[211,211]]],[1573537414820,["28447@DESKTOP-BE7HQ26",[[1,212,"\n"]],[211,211],[212,212]]],[1573537415554,["28447@DESKTOP-BE7HQ26",[[1,213,"\n"]],[212,212],[213,213]]],[1573537448560,["28447@DESKTOP-BE7HQ26",[[1,212,"  class Thread1 extends Thread {\n        @Override\n        public void run() {\n            System.out.println(\"Thread1 is Running...\");\n        }\n    }\n"]],[212,212],[364,364]]],[1573537453355,["28447@DESKTOP-BE7HQ26",[[-1,365,"\n"]],[365,365],[364,364]]],[1573537453602,["28447@DESKTOP-BE7HQ26",[[-1,364,"\n"]],[364,364],[363,363]]],[1573537456834,["28447@DESKTOP-BE7HQ26",[[1,372,"\n"]],[368,368],[369,369]]],[1573537458184,["28447@DESKTOP-BE7HQ26",[[-1,369,"\n"],[1,370,"#"]],[369,369],[370,370]]],[1573537459446,["28447@DESKTOP-BE7HQ26",[[1,370,"# shi"]],[370,370],[375,375]]],[1573537460072,["28447@DESKTOP-BE7HQ26",[[-1,372,"shi"]],[375,375],[372,372]]],[1573537467439,["28447@DESKTOP-BE7HQ26",[[1,372,"实现Runnable接口"]],[372,372],[384,384]]],[1573537467686,["28447@DESKTOP-BE7HQ26",[[1,387,"\n"]],[384,384],[385,385]]],[1573537565304,["28447@DESKTOP-BE7HQ26",[[1,385,"通过实现Runnable接口并重写run方法，并把Runnable实例传给Thread对象，Thread的start方法调用run方法再通过调用Runnable实例的run方法启动线程。所以如果一个类继承了另外一个父类，此时要实现多线程就不能通过继承Thread的类实现。"]],[385,385],[521,521]]],[1573537578356,["28447@DESKTOP-BE7HQ26",[[-1,522,"\n"],[1,523,"·"]],[522,522],[523,523]]],[1573537578724,["28447@DESKTOP-BE7HQ26",[[1,523,"··"]],[523,523],[525,525]]],[1573537579658,["28447@DESKTOP-BE7HQ26",[[-1,522,"···"]],[525,525],[522,522]]],[1573537580067,["28447@DESKTOP-BE7HQ26",[[-1,522,"\n"],[1,523,"`"]],[522,522],[523,523]]],[1573537580492,["28447@DESKTOP-BE7HQ26",[[1,523,"``"]],[523,523],[525,525]]],[1573537580519,["28447@DESKTOP-BE7HQ26",[[1,525,"language\n```\n"]],[525,525],[525,533]]],[1573537581033,["28447@DESKTOP-BE7HQ26",[[-1,525,"language"],[1,533,"j"]],[525,533],[526,526]]],[1573537581388,["28447@DESKTOP-BE7HQ26",[[1,526,"va"]],[526,526],[528,528]]],[1573537582410,["28447@DESKTOP-BE7HQ26",[[-1,526,"va"]],[528,528],[526,526]]],[1573537582829,["28447@DESKTOP-BE7HQ26",[[1,526,"aj"]],[526,526],[528,528]]],[1573537583180,["28447@DESKTOP-BE7HQ26",[[-1,527,"j"]],[528,528],[527,527]]],[1573537583830,["28447@DESKTOP-BE7HQ26",[[1,527,"va\\"]],[527,527],[530,530]]],[1573537583839,["28447@DESKTOP-BE7HQ26",[[1,531,"\n"]],[530,530],[531,531]]],[1573537584423,["28447@DESKTOP-BE7HQ26",[[-1,531,"\n"]],[531,531],[530,530]]],[1573537584617,["28447@DESKTOP-BE7HQ26",[[-1,529,"\\"]],[530,530],[529,529]]],[1573537584890,["28447@DESKTOP-BE7HQ26",[[1,530,"\n"]],[529,529],[530,530]]],[1573537585226,["28447@DESKTOP-BE7HQ26",[[1,530," class Thread2 implements Runnable {\n        @Override\n        public void run() {\n            System.out.println(\"Thread2 is Running...\");\n        }\n    }\n"]],[530,530],[686,686]]],[1573537587049,["28447@DESKTOP-BE7HQ26",[[1,385,"\n"]],[384,384],[385,385]]],[1573537588776,["28447@DESKTOP-BE7HQ26",[[1,92,"\n"]],[91,91],[92,92]]],[1573537592339,["28447@DESKTOP-BE7HQ26",[[1,693,"\n"]],[692,692],[693,693]]],[1573537592587,["28447@DESKTOP-BE7HQ26",[[1,694,"\n"]],[693,693],[694,694]]],[1573537594718,["28447@DESKTOP-BE7HQ26",[[-1,694,"\n"],[1,695,"#"]],[694,694],[695,695]]],[1573537595736,["28447@DESKTOP-BE7HQ26",[[1,695,"# shix"]],[695,695],[701,701]]],[1573537596556,["28447@DESKTOP-BE7HQ26",[[-1,697,"shix"]],[701,701],[697,697]]],[1573537600458,["28447@DESKTOP-BE7HQ26",[[1,697,"实现Callavk"]],[697,697],[706,706]]],[1573537600995,["28447@DESKTOP-BE7HQ26",[[-1,704,"vk"]],[706,706],[704,704]]],[1573537603443,["28447@DESKTOP-BE7HQ26",[[1,704,"bleji"]],[704,704],[709,709]]],[1573537604808,["28447@DESKTOP-BE7HQ26",[[-1,707,"ji"]],[709,709],[707,707]]],[1573537606166,["28447@DESKTOP-BE7HQ26",[[1,707,"接口"]],[707,707],[709,709]]],[1573537606340,["28447@DESKTOP-BE7HQ26",[[1,709,"\n\n"]],[709,709],[710,710]]],[1573537607640,["28447@DESKTOP-BE7HQ26",[[1,711,"\n"]],[710,710],[711,711]]]],null,"28447@DESKTOP-BE7HQ26"],["2854a216-60a3-4b09-a1c4-d0dc791d3203",1573738140347,"# 实现线程的3种方式\n\n\n创建线程的方式\n- 继承Thread类\n- 实现Runnable接口创建线程\n- 使用Callable和Future创建线程\n\n\n## 继承Thread类\n\n看jdk源码可以发现，Thread类其实是实现了Runnable接口的一个实例，继承Thread类后需要重写run方法并通过start方法启动线程。继承Thread类耦合性太强了，因为java只能单继承，所以不利于扩展。\n\n```java\n  class Thread1 extends Thread {\n        @Override\n        public void run() {\n            System.out.println(\"Thread1 is Running...\");\n        }\n    }\n```\n\n## 实现Runnable接口\n\n通过实现Runnable接口并重写run方法，并把Runnable实例传给Thread对象，Thread的start方法调用run方法再通过调用Runnable实例的run方法启动线程。所以如果一个类继承了另外一个父类，此时要实现多线程就不能通过继承Thread的类实现。\n```java\n class Thread2 implements Runnable {\n        @Override\n        public void run() {\n            System.out.println(\"Thread2 is Running...\");\n        }\n    }\n\n```\n\n## 实现Callable接口\n\n\n",[[1573738105271,["28447@DESKTOP-BE7HQ26",[[-1,688,"\n"]],[688,688],[687,687]]],[1573739175887,["28447@DESKTOP-BE7HQ26",[[1,709,"、"]],[709,709],[710,710]]],[1573739176677,["28447@DESKTOP-BE7HQ26",[[-1,709,"、"]],[710,710],[709,709]]],[1573739176934,["28447@DESKTOP-BE7HQ26",[[1,711,"\n"]],[709,709],[710,710]]],[1573739177333,["28447@DESKTOP-BE7HQ26",[[1,710,"通过实现Callable接口并重写call方法，并把Callable实例传给FutureTask对象，再把FutureTask对象传给Thread对象。它与Thread、Runnable最大的不同是Callable能返回一个异步处理的结果Future对象并能抛出异常，而其他两种不能。\n————————————————\n版权声明：本文为CSDN博主「CoralJIao」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/Cjiaocsda1127/article/details/86161997"]],[710,710],[1004,1004]]],[1573739180728,["28447@DESKTOP-BE7HQ26",[[-1,853,"————————————————\n版权声明：本文为CSDN博主「CoralJIao」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/Cjiaocsda1127/article/details/86161997\n"]],[853,1005],[853,853]]],[1573739185082,["28447@DESKTOP-BE7HQ26",[[1,854,"\n"]],[853,853],[854,854]]],[1573739191667,["28447@DESKTOP-BE7HQ26",[[1,855,"\n"]],[853,853],[854,854]]],[1573739192408,["28447@DESKTOP-BE7HQ26",[[1,854,"···"]],[854,854],[857,857]]],[1573739193227,["28447@DESKTOP-BE7HQ26",[[-1,854,"···"]],[857,857],[854,854]]],[1573739194025,["28447@DESKTOP-BE7HQ26",[[1,854,"```"]],[854,854],[857,857]]],[1573739194056,["28447@DESKTOP-BE7HQ26",[[1,857,"language\n```\n"]],[857,857],[857,865]]],[1573739194443,["28447@DESKTOP-BE7HQ26",[[-1,857,"language"],[1,865,"j"]],[857,865],[858,858]]],[1573739194856,["28447@DESKTOP-BE7HQ26",[[1,858,"va"]],[858,858],[860,860]]],[1573739195767,["28447@DESKTOP-BE7HQ26",[[-1,858,"va"]],[860,860],[858,858]]],[1573739196327,["28447@DESKTOP-BE7HQ26",[[1,858,"ava"]],[858,858],[861,861]]],[1573739196538,["28447@DESKTOP-BE7HQ26",[[1,862,"\n"]],[861,861],[862,862]]],[1573739196898,["28447@DESKTOP-BE7HQ26",[[1,862," class Thread3<T> implements Callable<T> {\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public T call() throws Exception {\n            System.out.println(\"Thread3 is Running...\");\n            return (T) new User(\"jiao\", 23);\n        }\n    }\n"]],[862,862],[1123,1123]]],[1573739271668,["28447@DESKTOP-BE7HQ26",[[1,854,"\n"]],[853,853],[854,854]]],[1573739273428,["28447@DESKTOP-BE7HQ26",[[-1,854,"\n"]],[854,854],[853,853]]],[1573739275998,["28447@DESKTOP-BE7HQ26",[[1,1130,"\n"]],[1128,1128],[1129,1129]]],[1573739277790,["28447@DESKTOP-BE7HQ26",[[1,1129,"{"]],[1129,1129],[1130,1130]]],[1573739278218,["28447@DESKTOP-BE7HQ26",[[-1,1129,"{"]],[1130,1130],[1129,1129]]],[1573739278972,["28447@DESKTOP-BE7HQ26",[[1,1129,"[]"]],[1129,1129],[1131,1131]]],[1573739286048,["28447@DESKTOP-BE7HQ26",[[1,1130,"注 | Futer"]],[1130,1130],[1139,1139]]],[1573739287167,["28447@DESKTOP-BE7HQ26",[[-1,1136,"ter"]],[1139,1139],[1136,1136]]],[1573739288433,["28447@DESKTOP-BE7HQ26",[[1,1136,"ter"]],[1136,1136],[1139,1139]]],[1573739290634,["28447@DESKTOP-BE7HQ26",[[1,1137,"u"]],[1137,1137],[1138,1138]]],[1573739292928,["28447@DESKTOP-BE7HQ26",[[-1,1138,"e"]],[1139,1139],[1138,1138]]],[1573739299573,["28447@DESKTOP-BE7HQ26",[[1,1139,"e对象"]],[1139,1139],[1142,1142]]],[1573739304517,["28447@DESKTOP-BE7HQ26",[[1,1145,"\n"]],[1143,1143],[1144,1144]]],[1573739307870,["28447@DESKTOP-BE7HQ26",[[1,1143,"（）"]],[1143,1143],[1145,1145]]],[1573739308713,["28447@DESKTOP-BE7HQ26",[[-1,1143,"（）"]],[1145,1145],[1143,1143]]],[1573739309447,["28447@DESKTOP-BE7HQ26",[[1,1143,"("]],[1143,1143],[1144,1144]]],[1573739309472,["28447@DESKTOP-BE7HQ26",[[1,1144,"https://)"]],[1144,1144],[1144,1152]]],[1573739309652,["28447@DESKTOP-BE7HQ26",[[-1,1144,"https://"],[1,1152,")"]],[1144,1152],[1145,1145]]],[1573739311098,["28447@DESKTOP-BE7HQ26",[[-1,1145,")"]],[1145,1145],[1144,1144]]],[1573739314955,["28447@DESKTOP-BE7HQ26",[[1,1144,"[https://www.cnblogs.com/4everlove/p/4277270.html](https://www.cnblogs.com/4everlove/p/4277270.html)"]],[1144,1144],[1244,1244]]],[1573739317588,["28447@DESKTOP-BE7HQ26",[[1,1248,"\n"]],[1245,1245],[1246,1246]]],[1573739323771,["28447@DESKTOP-BE7HQ26",[[-1,1142,"][https://www.cnblogs.com/4everlove/p/4277270.html]("]],[1143,1194],[1142,1142]]],[1573739325198,["28447@DESKTOP-BE7HQ26",[[-1,1192,")"]],[1193,1193],[1192,1192]]],[1573739329255,["28447@DESKTOP-BE7HQ26",[[-1,1140,"对象"]],[1142,1142],[1140,1140]]],[1573739331981,["28447@DESKTOP-BE7HQ26",[[1,1140,"对象]"]],[1140,1140],[1143,1143]]],[1573739336439,["28447@DESKTOP-BE7HQ26",[[-1,1130,"注"]],[1131,1131],[1130,1130]]],[1573739340677,["28447@DESKTOP-BE7HQ26",[[1,1130,"🔍"]],[1130,1130],[1132,1132]]],[1573739343059,["28447@DESKTOP-BE7HQ26",[[1,1198,"\n"]],[1194,1194],[1195,1195]]],[1573739359948,["28447@DESKTOP-BE7HQ26",[[1,1195,"Futuer"]],[1195,1195],[1201,1201]]],[1573739360355,["28447@DESKTOP-BE7HQ26",[[-1,1199,"er"]],[1201,1201],[1199,1199]]],[1573739361634,["28447@DESKTOP-BE7HQ26",[[1,1199,"reduix"]],[1199,1199],[1205,1205]]],[1573739363179,["28447@DESKTOP-BE7HQ26",[[-1,1201,"duix"]],[1205,1205],[1201,1201]]],[1573739378426,["28447@DESKTOP-BE7HQ26",[[1,1201,"类存在于JDK的concurrent包中国"]],[1201,1201],[1222,1222]]],[1573739378898,["28447@DESKTOP-BE7HQ26",[[-1,1221,"国"]],[1222,1222],[1221,1221]]],[1573739383340,["28447@DESKTOP-BE7HQ26",[[1,1221,"，主要涌入"]],[1221,1221],[1226,1226]]],[1573739384809,["28447@DESKTOP-BE7HQ26",[[-1,1224,"涌入"]],[1226,1226],[1224,1224]]],[1573739395006,["28447@DESKTOP-BE7HQ26",[[1,1224,"用途是接受Javade "]],[1224,1224],[1236,1236]]],[1573739395623,["28447@DESKTOP-BE7HQ26",[[-1,1233,"de "]],[1236,1236],[1233,1233]]],[1573739397692,["28447@DESKTOP-BE7HQ26",[[1,1233,"的异步"]],[1233,1233],[1236,1236]]],[1573739401109,["28447@DESKTOP-BE7HQ26",[[1,1236,"线程九四u按"]],[1236,1236],[1242,1242]]],[1573739402108,["28447@DESKTOP-BE7HQ26",[[-1,1238,"九四u按"]],[1242,1242],[1238,1238]]],[1573739405822,["28447@DESKTOP-BE7HQ26",[[1,1238,"计算返回结果"]],[1238,1238],[1244,1244]]],[1573739406383,["28447@DESKTOP-BE7HQ26",[[1,1248,"\n"]],[1244,1244],[1245,1245]]],[1573741390124,["28447@DESKTOP-BE7HQ26",[[1,1194,"you"]],[1194,1194],[1197,1197]]],[1573741391189,["28447@DESKTOP-BE7HQ26",[[-1,1194,"you"]],[1197,1197],[1194,1194]]],[1573741391549,["28447@DESKTOP-BE7HQ26",[[1,1195,"\n"]],[1194,1194],[1195,1195]]],[1573741412311,["28447@DESKTOP-BE7HQ26",[[1,1195,"由于上述两种创建线程的方式无法摆正"]],[1195,1195],[1212,1212]]],[1573741413029,["28447@DESKTOP-BE7HQ26",[[-1,1210,"摆正"]],[1212,1212],[1210,1210]]],[1573741438788,["28447@DESKTOP-BE7HQ26",[[1,1210,"保证获取之前的而执行结果，通过实现Callback接口，并用futyre"]],[1210,1210],[1246,1246]]],[1573741439909,["28447@DESKTOP-BE7HQ26",[[-1,1243,"yre"]],[1246,1246],[1243,1243]]],[1573741440921,["28447@DESKTOP-BE7HQ26",[[1,1243,"ure"]],[1243,1243],[1246,1246]]],[1573741442939,["28447@DESKTOP-BE7HQ26",[[-1,1240,"f"]],[1241,1241],[1240,1240]]],[1573741443198,["28447@DESKTOP-BE7HQ26",[[1,1240,"F"]],[1240,1240],[1241,1241]]],[1573741454916,["28447@DESKTOP-BE7HQ26",[[1,1246,"可以接收多线程的而执行"]],[1246,1246],[1257,1257]]],[1573741456360,["28447@DESKTOP-BE7HQ26",[[-1,1254,"而"]],[1255,1255],[1254,1254]]],[1573741467834,["28447@DESKTOP-BE7HQ26",[[1,1256,"结果。"]],[1256,1256],[1259,1259]]],[1573741469280,["28447@DESKTOP-BE7HQ26",[[1,1309,"。"]],[1309,1309],[1310,1310]]],[1573741484977,["28447@DESKTOP-BE7HQ26",[[1,1311,"举个例子：比如去吃早点时，点了包子和凉菜，包子需要等3分钟，凉菜只需1分钟，如果是串行的一个执行，在吃上早点的时候需要等待4分钟，但是因为你在等包子的时候，可以同时准备凉菜，所以在准备凉菜的过程中，可以同时准备包子，这样只需要等待3分钟。那Future这种模式就是后面这种执行模式。"]],[1311,1311],[1452,1452]]],[1573741489125,["28447@DESKTOP-BE7HQ26",[[1,1311,"\n"]],[1310,1310],[1311,1311]]],[1573741512401,["28447@DESKTOP-BE7HQ26",[[1,1260,"\n"]],[1259,1259],[1260,1260]]],[1573741515949,["28447@DESKTOP-BE7HQ26",[[1,1195,"\n"]],[1194,1194],[1195,1195]]],[1573741530219,["28447@DESKTOP-BE7HQ26",[[1,1145,"["],[-1,1169,"4everlove/p/4277270"],[1,1188,"jcjssl/p/9592145.html](https://www.cnblogs.com/jcjssl/p/9592145"],[1,1193,")"]],[1145,1193],[1239,1239]]],[1573741533466,["28447@DESKTOP-BE7HQ26",[[-1,1145,"[https://www.cnblogs.com/jcjssl/p/9592145.html]("]],[1144,1192],[1144,1144]]],[1573741537511,["28447@DESKTOP-BE7HQ26",[[-1,1129,"[🔍 | Future对象](https://www.cnblogs.com/jcjssl/p/9592145.html)\n)"]],[1192,1192],[1128,1128]]],[1573741538568,["28447@DESKTOP-BE7HQ26",[[-1,1129,"\n"]],[1128,1128],[1127,1127]]],[1573741540419,["28447@DESKTOP-BE7HQ26",[[1,1390,"[🔍 | Future对象](https://www.cnblogs.com/jcjssl/p/9592145.html)\n"]],[1389,1389],[1452,1452]]],[1573741543269,["28447@DESKTOP-BE7HQ26",[[1,1455,"\n"]],[1454,1454],[1455,1455]]],[1573741552665,["28447@DESKTOP-BE7HQ26",[[1,0,"#"]],[1,1],[2,2]]],[1573741555196,["28447@DESKTOP-BE7HQ26",[[1,82,"#"]],[82,82],[83,83]]],[1573741557697,["28447@DESKTOP-BE7HQ26",[[1,374,"#"]],[374,374],[375,375]]],[1573741560652,["28447@DESKTOP-BE7HQ26",[[1,698,"#"]],[698,698],[699,699]]],[1573741582608,["28447@DESKTOP-BE7HQ26",[[1,1458,"## 关闭先后曾的"]],[1458,1458],[1467,1467]]],[1573741583594,["28447@DESKTOP-BE7HQ26",[[-1,1463,"先后曾的"]],[1467,1467],[1463,1463]]],[1573741590232,["28447@DESKTOP-BE7HQ26",[[1,1463,"线程的三种方式"]],[1463,1463],[1470,1470]]],[1573741590434,["28447@DESKTOP-BE7HQ26",[[1,1472,"\n"]],[1470,1470],[1471,1471]]],[1573741590634,["28447@DESKTOP-BE7HQ26",[[1,1473,"\n"]],[1471,1471],[1472,1472]]],[1573741590814,["28447@DESKTOP-BE7HQ26",[[1,1474,"\n"]],[1472,1472],[1473,1473]]],[1573741603796,["28447@DESKTOP-BE7HQ26",[[1,1472,"### 使用标志位终止线程"]],[1472,1472],[1485,1485]]],[1573741604474,["28447@DESKTOP-BE7HQ26",[[1,1488,"\n"]],[1485,1485],[1486,1486]]],[1573741619114,["28447@DESKTOP-BE7HQ26",[[1,1486,"### 使用stop()终止"]],[1486,1486],[1500,1500]]],[1573741620149,["28447@DESKTOP-BE7HQ26",[[1,1500,"线程"]],[1500,1500],[1502,1502]]],[1573741620394,["28447@DESKTOP-BE7HQ26",[[1,1505,"\n"]],[1502,1502],[1503,1503]]],[1573741637118,["28447@DESKTOP-BE7HQ26",[[1,1503,"### 使用interrupt()终端线程"]],[1503,1503],[1524,1524]]],[1573741638304,["28447@DESKTOP-BE7HQ26",[[-1,1520,"终端"]],[1522,1522],[1520,1520]]],[1573741640268,["28447@DESKTOP-BE7HQ26",[[1,1520,"中断"]],[1520,1520],[1522,1522]]],[1573741646034,["28447@DESKTOP-BE7HQ26",[[1,1472,"\n"]],[1470,1470],[1471,1471]]],[1573741646518,["28447@DESKTOP-BE7HQ26",[[1,1471,"-"]],[1471,1471],[1472,1472]]],[1573741647374,["28447@DESKTOP-BE7HQ26",[[1,1474,"\n"]],[1472,1472],[1473,1473]]],[1573741650840,["28447@DESKTOP-BE7HQ26",[[1,1472,"使用标志位终止线程"]],[1472,1472],[1481,1481]]],[1573741651800,["28447@DESKTOP-BE7HQ26",[[1,1472," "]],[1472,1472],[1473,1473]]],[1573741663994,["28447@DESKTOP-BE7HQ26",[[1,1483,"- 使用stop()终止线程（）"]],[1483,1483],[1499,1499]]],[1573741665458,["28447@DESKTOP-BE7HQ26",[[1,1498,"java"]],[1498,1498],[1502,1502]]],[1573741666998,["28447@DESKTOP-BE7HQ26",[[-1,1498,"java"]],[1502,1502],[1498,1498]]],[1573741668019,["28447@DESKTOP-BE7HQ26",[[1,1498,"guo"]],[1498,1498],[1501,1501]]],[1573741668787,["28447@DESKTOP-BE7HQ26",[[-1,1498,"guo"]],[1501,1501],[1498,1498]]],[1573741671705,["28447@DESKTOP-BE7HQ26",[[1,1498,"过时"]],[1498,1498],[1500,1500]]],[1573741672300,["28447@DESKTOP-BE7HQ26",[[1,1502,"- \n"]],[1501,1501],[1504,1504]]],[1573741679609,["28447@DESKTOP-BE7HQ26",[[1,1504,"使用interrupt()中断线程"]],[1504,1504],[1521,1521]]],[1573741683264,["28447@DESKTOP-BE7HQ26",[[1,1537,"\n"]],[1536,1536],[1537,1537]]],[1573742028947,["28447@DESKTOP-BE7HQ26",[[1,1538,"\n"]],[1536,1536],[1537,1537]]],[1573742029147,["28447@DESKTOP-BE7HQ26",[[1,1539,"\n"]],[1537,1537],[1538,1538]]],[1573742029297,["28447@DESKTOP-BE7HQ26",[[1,1540,"\n"]],[1538,1538],[1539,1539]]],[1573742031120,["28447@DESKTOP-BE7HQ26",[[1,1537,"```"]],[1537,1537],[1540,1540]]],[1573742031154,["28447@DESKTOP-BE7HQ26",[[1,1540,"language\n```\n"]],[1540,1540],[1540,1548]]],[1573742031961,["28447@DESKTOP-BE7HQ26",[[-1,1540,"language"],[1,1548,"j"]],[1540,1548],[1541,1541]]],[1573742032343,["28447@DESKTOP-BE7HQ26",[[1,1541,"ava"]],[1541,1541],[1544,1544]]],[1573742032657,["28447@DESKTOP-BE7HQ26",[[1,1545,"\n"]],[1544,1544],[1545,1545]]],[1573742032889,["28447@DESKTOP-BE7HQ26",[[1,1546,"\n"]],[1545,1545],[1546,1546]]],[1573742035137,["28447@DESKTOP-BE7HQ26",[[1,1537,"\n"]],[1536,1536],[1537,1537]]],[1573742035367,["28447@DESKTOP-BE7HQ26",[[1,1538,"\n"]],[1537,1537],[1538,1538]]],[1573742035567,["28447@DESKTOP-BE7HQ26",[[1,1539,"\n"]],[1538,1538],[1539,1539]]],[1573742039590,["28447@DESKTOP-BE7HQ26",[[1,1537,"使用run"]],[1537,1537],[1542,1542]]],[1573742056027,["28447@DESKTOP-BE7HQ26",[[1,1542,"方法执行完毕之后，该线程就终止了。"]],[1542,1542],[1559,1559]]],[1573742095595,["28447@DESKTOP-BE7HQ26",[[1,1537,"\n"]],[1536,1536],[1537,1537]]],[1573742112335,["28447@DESKTOP-BE7HQ26",[[-1,1538,"使用run方法执行完毕之后，该线程就终止了。"]],[1538,1560],[1538,1538]]],[1573742113677,["28447@DESKTOP-BE7HQ26",[[1,1471,"\n"]],[1470,1470],[1471,1471]]],[1573742113860,["28447@DESKTOP-BE7HQ26",[[1,1472,"\n"]],[1471,1471],[1472,1472]]],[1573742143472,["28447@DESKTOP-BE7HQ26",[[1,1471,"使用run方法执行完毕之后，该线程就终止了。但是在某些特殊情形下，run()方法会被一致执行"]],[1471,1471],[1517,1517]]],[1573742144264,["28447@DESKTOP-BE7HQ26",[[-1,1513,"一致执行"]],[1517,1517],[1513,1513]]],[1573742158864,["28447@DESKTOP-BE7HQ26",[[1,1513,"一直执行，比如使用****"]],[1513,1513],[1524,1524]]],[1573742162259,["28447@DESKTOP-BE7HQ26",[[1,1524,"while()"]],[1524,1524],[1531,1531]]],[1573742163941,["28447@DESKTOP-BE7HQ26",[[1,1530,"truer"]],[1530,1530],[1535,1535]]],[1573742164755,["28447@DESKTOP-BE7HQ26",[[-1,1534,"r"]],[1535,1535],[1534,1534]]],[1573742166620,["28447@DESKTOP-BE7HQ26",[[1,1535,"{}"]],[1535,1535],[1537,1537]]],[1573742167973,["28447@DESKTOP-BE7HQ26",[[1,1536,"..."]],[1536,1536],[1539,1539]]],[1573742170555,["28447@DESKTOP-BE7HQ26",[[-1,1536,"..."]],[1539,1539],[1536,1536]]],[1573742172257,["28447@DESKTOP-BE7HQ26",[[1,1536,"。。"]],[1536,1536],[1538,1538]]],[1573742172995,["28447@DESKTOP-BE7HQ26",[[-1,1536,"。。"]],[1538,1538],[1536,1536]]],[1573742173745,["28447@DESKTOP-BE7HQ26",[[1,1536,"..."]],[1536,1536],[1539,1539]]],[1573742179597,["28447@DESKTOP-BE7HQ26",[[1,1542,"这样的u想你换"]],[1542,1542],[1549,1549]]],[1573742180625,["28447@DESKTOP-BE7HQ26",[[-1,1545,"u想你换"]],[1549,1549],[1545,1545]]],[1573742183410,["28447@DESKTOP-BE7HQ26",[[1,1545,"循环语句"]],[1545,1545],[1549,1549]]],[1573742191154,["28447@DESKTOP-BE7HQ26",[[1,1539,"\\"]],[1539,1539],[1540,1540]]],[1573742193288,["28447@DESKTOP-BE7HQ26",[[-1,1539,"\\"]],[1540,1540],[1539,1539]]],[1573742194103,["28447@DESKTOP-BE7HQ26",[[1,1540,"\\"]],[1540,1540],[1541,1541]]],[1573742195225,["28447@DESKTOP-BE7HQ26",[[-1,1540,"\\"]],[1541,1541],[1540,1540]]],[1573742199021,["28447@DESKTOP-BE7HQ26",[[1,1524," "]],[1524,1524],[1525,1525]]],[1573742200788,["28447@DESKTOP-BE7HQ26",[[-1,1524," "]],[1525,1525],[1524,1524]]],[1573742207295,["28447@DESKTOP-BE7HQ26",[[-1,1536,"..."]],[1539,1539],[1536,1536]]],[1573742210480,["28447@DESKTOP-BE7HQ26",[[1,1536,"..."]],[1536,1536],[1539,1539]]],[1573742213505,["28447@DESKTOP-BE7HQ26",[[-1,1524,"while(true){...}"]],[1524,1540],[1524,1524]]],[1573742214741,["28447@DESKTOP-BE7HQ26",[[1,1524,"ajsd "]],[1524,1524],[1529,1529]]],[1573742215655,["28447@DESKTOP-BE7HQ26",[[-1,1528," "]],[1529,1529],[1528,1528]]],[1573742219281,["28447@DESKTOP-BE7HQ26",[[1,1528,"asjd asd asdh a"]],[1528,1528],[1543,1543]]],[1573742219965,["28447@DESKTOP-BE7HQ26",[[-1,1542,"a"]],[1543,1543],[1542,1542]]],[1573742226775,["28447@DESKTOP-BE7HQ26",[[-1,1524,"ajsdasjd asd asdh "]],[1542,1542],[1524,1524]]],[1573742227200,["28447@DESKTOP-BE7HQ26",[[1,1524,"while(true){...}"]],[1524,1524],[1540,1540]]],[1573742232101,["28447@DESKTOP-BE7HQ26",[[1,1539,"\\\\"]],[1539,1539],[1540,1540]]],[1573742234325,["28447@DESKTOP-BE7HQ26",[[-1,1540,"\\"]],[1540,1540],[1539,1539]]],[1573742237245,["28447@DESKTOP-BE7HQ26",[[1,1538,"\\\\"]],[1538,1538],[1539,1539]]],[1573742238568,["28447@DESKTOP-BE7HQ26",[[1,1537,"\\"]],[1537,1537],[1538,1538]]],[1573742240176,["28447@DESKTOP-BE7HQ26",[[-1,1537,"\\"]],[1538,1538],[1537,1537]]],[1573742240535,["28447@DESKTOP-BE7HQ26",[[-1,1538,"\\\\"]],[1539,1539],[1538,1538]]],[1573742240806,["28447@DESKTOP-BE7HQ26",[[1,1540,"\\"]],[1539,1539],[1540,1540]]],[1573742241343,["28447@DESKTOP-BE7HQ26",[[-1,1539,"\\\\"]],[1540,1540],[1539,1539]]],[1573742244224,["28447@DESKTOP-BE7HQ26",[[-1,1529,"(true){...}"]],[1529,1540],[1529,1529]]],[1573742245512,["28447@DESKTOP-BE7HQ26",[[1,1529,"(true){...}"]],[1529,1529],[1529,1540]]],[1573742247801,["28447@DESKTOP-BE7HQ26",[[1,1529,"\\"]],[1529,1529],[1530,1530]]],[1573742250904,["28447@DESKTOP-BE7HQ26",[[1,1535,"\\"]],[1535,1535],[1536,1536]]],[1573742252439,["28447@DESKTOP-BE7HQ26",[[1,1537,"\\"]],[1537,1537],[1538,1538]]],[1573742253703,["28447@DESKTOP-BE7HQ26",[[1,1542,"\\"]],[1542,1542],[1543,1543]]],[1573742256257,["28447@DESKTOP-BE7HQ26",[[-1,1542,"\\"]],[1543,1543],[1542,1542]]],[1573742256700,["28447@DESKTOP-BE7HQ26",[[-1,1537,"\\"]],[1538,1538],[1537,1537]]],[1573742257052,["28447@DESKTOP-BE7HQ26",[[-1,1535,"\\"]],[1536,1536],[1535,1535]]],[1573742257429,["28447@DESKTOP-BE7HQ26",[[-1,1529,"\\"]],[1530,1530],[1529,1529]]],[1573742257751,["28447@DESKTOP-BE7HQ26",[[-1,1524,"while(true){...}"]],[1540,1540],[1524,1524]]],[1573742259215,["28447@DESKTOP-BE7HQ26",[[1,1524,"(true){...}"]],[1524,1524],[1535,1535]]],[1573742262558,["28447@DESKTOP-BE7HQ26",[[1,1524,"while"]],[1524,1524],[1529,1529]]],[1573742268249,["28447@DESKTOP-BE7HQ26",[[-1,1524,"while(true){...}"]],[1529,1529],[1524,1524]]],[1573742268934,["28447@DESKTOP-BE7HQ26",[[1,1524,"ajsdasjd asd asdh a"]],[1524,1524],[1543,1543]]],[1573742270065,["28447@DESKTOP-BE7HQ26",[[-1,1528,"asjd asd asdh a"]],[1543,1543],[1528,1528]]],[1573742270468,["28447@DESKTOP-BE7HQ26",[[1,1528," "]],[1528,1528],[1529,1529]]],[1573742270866,["28447@DESKTOP-BE7HQ26",[[-1,1524,"ajsd "]],[1529,1529],[1524,1524]]],[1573742271387,["28447@DESKTOP-BE7HQ26",[[1,1524,"while(true){...}"]],[1524,1524],[1524,1540]]],[1573742275205,["28447@DESKTOP-BE7HQ26",[[-1,1529,"(true){...}"]],[1529,1540],[1529,1529]]],[1573742278507,["28447@DESKTOP-BE7HQ26",[[1,1529,"("]],[1529,1529],[1530,1530]]],[1573742285285,["28447@DESKTOP-BE7HQ26",[[1,1529,"\\\\"]],[1529,1529],[1531,1531]]],[1573742289291,["28447@DESKTOP-BE7HQ26",[[-1,1529,"\\\\("]],[1531,1531],[1529,1529]]],[1573742291153,["28447@DESKTOP-BE7HQ26",[[1,1529,"（）"]],[1529,1529],[1531,1531]]],[1573742292745,["28447@DESKTOP-BE7HQ26",[[-1,1529,"（）"]],[1531,1531],[1529,1529]]],[1573742295311,["28447@DESKTOP-BE7HQ26",[[1,1529,"()"]],[1529,1529],[1531,1531]]],[1573742297374,["28447@DESKTOP-BE7HQ26",[[-1,1529,"()"]],[1531,1531],[1529,1529]]],[1573742297630,["28447@DESKTOP-BE7HQ26",[[1,1529,"(true){...}"]],[1529,1529],[1540,1540]]],[1573742298399,["28447@DESKTOP-BE7HQ26",[[-1,1529,"(true){...}"]],[1540,1540],[1529,1529]]],[1573742301387,["28447@DESKTOP-BE7HQ26",[[1,1529,"{}"]],[1529,1529],[1531,1531]]],[1573742302886,["28447@DESKTOP-BE7HQ26",[[-1,1529,"{}"]],[1531,1531],[1529,1529]]],[1573742311133,["28447@DESKTOP-BE7HQ26",[[1,1529,"(true){...}     "]],[1529,1529],[1545,1545]]],[1573742312636,["28447@DESKTOP-BE7HQ26",[[-1,1540,"     "]],[1545,1545],[1540,1540]]],[1573742325564,["28447@DESKTOP-BE7HQ26",[[1,1549,"."]],[1549,1549],[1550,1550]]],[1573742326806,["28447@DESKTOP-BE7HQ26",[[-1,1549,"."]],[1550,1550],[1549,1549]]],[1573742327190,["28447@DESKTOP-BE7HQ26",[[1,1549,"。"]],[1549,1549],[1550,1550]]],[1573742337138,["28447@DESKTOP-BE7HQ26",[[1,1618,"修改"]],[1618,1618],[1620,1620]]],[1573742351051,["28447@DESKTOP-BE7HQ26",[[1,1620,"标志位的方式结束run（）fangfa"]],[1620,1620],[1639,1639]]],[1573742352419,["28447@DESKTOP-BE7HQ26",[[-1,1633,"fangfa"]],[1639,1639],[1633,1633]]],[1573742353433,["28447@DESKTOP-BE7HQ26",[[1,1633,"方法"]],[1633,1633],[1635,1635]]],[1573742355798,["28447@DESKTOP-BE7HQ26",[[-1,1638,"\n"]],[1637,1637],[1636,1636]]],[1573742355996,["28447@DESKTOP-BE7HQ26",[[-1,1637,"\n"]],[1636,1636],[1635,1635]]],[1573742362053,["28447@DESKTOP-BE7HQ26",[[1,1645,"public class ServerThread extends Thread {\n    //volatile修饰符用来保证其它线程读取的总是该变量的最新的值\n    public volatile boolean exit = false; \n\n    @Override\n    public void run() {\n        ServerSocket serverSocket = new ServerSocket(8080);\n        while(!exit){\n            serverSocket.accept(); //阻塞等待客户端消息\n            ...\n        }\n    }\n    \n    public static void main(String[] args) {\n        ServerThread t = new ServerThread();\n        t.start();\n        ...\n        t.exit = true; //修改标志位，退出线程\n    }\n}"]],[1645,1645],[2139,2139]]],[1573742370196,["28447@DESKTOP-BE7HQ26",[[-1,2148,"\n"]],[2147,2147],[2146,2146]]],[1573742370386,["28447@DESKTOP-BE7HQ26",[[-1,2147,"\n"]],[2146,2146],[2145,2145]]],[1573742372591,["28447@DESKTOP-BE7HQ26",[[1,2164,"\n"]],[2164,2164],[2165,2165]]],[1573742396312,["28447@DESKTOP-BE7HQ26",[[1,2164,"除了"]],[2164,2164],[2166,2166]]],[1573742399574,["28447@DESKTOP-BE7HQ26",[[1,2164,"java"]],[2164,2164],[2168,2168]]],[1573742402244,["28447@DESKTOP-BE7HQ26",[[1,2168,".lanag"]],[2168,2168],[2174,2174]]],[1573742403376,["28447@DESKTOP-BE7HQ26",[[-1,2172,"ag"]],[2174,2174],[2172,2172]]],[1573742407431,["28447@DESKTOP-BE7HQ26",[[1,2172,"g.Threadzho"]],[2172,2172],[2183,2183]]],[1573742408206,["28447@DESKTOP-BE7HQ26",[[-1,2180,"zho"]],[2183,2183],[2180,2180]]],[1573742409918,["28447@DESKTOP-BE7HQ26",[[1,2180,"种"]],[2180,2180],[2181,2181]]],[1573742410736,["28447@DESKTOP-BE7HQ26",[[-1,2180,"种"]],[2181,2181],[2180,2180]]],[1573742414843,["28447@DESKTOP-BE7HQ26",[[1,2180,"中"]],[2180,2180],[2181,2181]]],[1573742422156,["28447@DESKTOP-BE7HQ26",[[1,2183,"start()fang"]],[2183,2183],[2194,2194]]],[1573742423036,["28447@DESKTOP-BE7HQ26",[[-1,2190,"fang"]],[2194,2194],[2190,2190]]],[1573742433015,["28447@DESKTOP-BE7HQ26",[[1,2190,"方法外，stop（）"]],[2190,2190],[2200,2200]]],[1573742434896,["28447@DESKTOP-BE7HQ26",[[-1,2198,"（）"]],[2200,2200],[2198,2198]]],[1573742435920,["28447@DESKTOP-BE7HQ26",[[1,2198,"（）"]],[2198,2198],[2200,2200]]],[1573742436936,["28447@DESKTOP-BE7HQ26",[[-1,2198,"（）"]],[2200,2200],[2198,2198]]],[1573742458264,["28447@DESKTOP-BE7HQ26",[[1,2198,"(),resume(),suspend(),destory()等方法"]],[2198,2198],[2232,2232]]],[1573742463865,["28447@DESKTOP-BE7HQ26",[[1,2232,"已经过时（）"]],[2232,2232],[2238,2238]]],[1573742468729,["28447@DESKTOP-BE7HQ26",[[1,2237,"deprecated"]],[2237,2237],[2247,2247]]],[1573742471614,["28447@DESKTOP-BE7HQ26",[[1,2201," "]],[2201,2201],[2202,2202]]],[1573742473417,["28447@DESKTOP-BE7HQ26",[[1,2221," "]],[2221,2221],[2222,2222]]],[1573742474631,["28447@DESKTOP-BE7HQ26",[[1,2231," "]],[2231,2231],[2232,2232]]],[1573742477116,["28447@DESKTOP-BE7HQ26",[[-1,2231," "]],[2232,2232],[2231,2231]]],[1573742479656,["28447@DESKTOP-BE7HQ26",[[1,2251,"\n"]],[2250,2250],[2251,2251]]],[1573742482058,["28447@DESKTOP-BE7HQ26",[[1,2251,"wei"]],[2251,2251],[2254,2254]]],[1573742482801,["28447@DESKTOP-BE7HQ26",[[-1,2251,"wei"]],[2254,2254],[2251,2251]]],[1573742484421,["28447@DESKTOP-BE7HQ26",[[1,2251,"为什恶魔"]],[2251,2251],[2255,2255]]],[1573742485867,["28447@DESKTOP-BE7HQ26",[[-1,2251,"为什恶魔"]],[2255,2255],[2251,2251]]],[1573742492041,["28447@DESKTOP-BE7HQ26",[[1,2251,"为什么启用stop："]],[2251,2251],[2261,2261]]],[1573742495366,["28447@DESKTOP-BE7HQ26",[[-1,2251,"为什么启用"]],[2256,2256],[2251,2251]]],[1573742495890,["28447@DESKTOP-BE7HQ26",[[1,2251,"wei"]],[2251,2251],[2254,2254]]],[1573742496642,["28447@DESKTOP-BE7HQ26",[[-1,2251,"wei"]],[2254,2254],[2251,2251]]],[1573742498160,["28447@DESKTOP-BE7HQ26",[[1,2251,"为什恶魔"]],[2251,2251],[2255,2255]]],[1573742499146,["28447@DESKTOP-BE7HQ26",[[-1,2251,"为什恶魔"]],[2255,2255],[2251,2251]]],[1573742504702,["28447@DESKTOP-BE7HQ26",[[1,2251,"为什么弃用"]],[2251,2251],[2256,2256]]],[1573742508396,["28447@DESKTOP-BE7HQ26",[[1,2262,"\n"]],[2261,2261],[2262,2262]]],[1573742508576,["28447@DESKTOP-BE7HQ26",[[1,2263,"\n"]],[2262,2262],[2263,2263]]],[1573742510466,["28447@DESKTOP-BE7HQ26",[[1,2264,"\n"]],[2261,2261],[2262,2262]]],[1573742511956,["28447@DESKTOP-BE7HQ26",[[1,2251,"\n"]],[2251,2251],[2252,2252]]],[1573742538414,["28447@DESKTOP-BE7HQ26",[[1,2263,"-"]],[2263,2263],[2264,2264]]],[1573742539467,["28447@DESKTOP-BE7HQ26",[[1,2263," "]],[2263,2263],[2264,2264]]],[1573742542187,["28447@DESKTOP-BE7HQ26",[[1,2265," 1"]],[2265,2265],[2267,2267]]],[1573742542614,["28447@DESKTOP-BE7HQ26",[[-1,2266,"1"]],[2267,2267],[2266,2266]]],[1573742547953,["28447@DESKTOP-BE7HQ26",[[1,2266,"调用stop方"]],[2266,2266],[2273,2273]]],[1573742548457,["28447@DESKTOP-BE7HQ26",[[-1,2272,"方"]],[2273,2273],[2272,2272]]],[1573742556199,["28447@DESKTOP-BE7HQ26",[[1,2272,"方法会立即停止run方"]],[2272,2272],[2283,2283]]],[1573742557264,["28447@DESKTOP-BE7HQ26",[[-1,2282,"方"]],[2283,2283],[2282,2282]]],[1573742558060,["28447@DESKTOP-BE7HQ26",[[1,2282,"（）"]],[2282,2282],[2284,2284]]],[1573742559794,["28447@DESKTOP-BE7HQ26",[[-1,2282,"（）"]],[2284,2284],[2282,2282]]],[1573742578103,["28447@DESKTOP-BE7HQ26",[[1,2282,"()方法中剩余的全部工作，包括catch或"]],[2282,2282],[2303,2303]]],[1573742581529,["28447@DESKTOP-BE7HQ26",[[1,2303,"finalluy"]],[2303,2303],[2311,2311]]],[1573742582294,["28447@DESKTOP-BE7HQ26",[[-1,2309,"uy"]],[2311,2311],[2309,2309]]],[1573742602971,["28447@DESKTOP-BE7HQ26",[[1,2309,"y语句中的，并抛出ThreadDeath异常(通常情况下此异常不需要显示的捕获)，因此可能会导致一些清理性的工作的得不到完成，如文件，数据库等的关闭。"]],[2309,2309],[2384,2384]]],[1573742605884,["28447@DESKTOP-BE7HQ26",[[1,2385," - \n"]],[2384,2384],[2388,2388]]],[1573742612928,["28447@DESKTOP-BE7HQ26",[[1,2388,"调用 stop() 方法会立即释放该线程所持有的所有的锁，导致数据得不到同步，出现数据不一致的问题。"]],[2388,2388],[2438,2438]]],[1573742683384,["28447@DESKTOP-BE7HQ26",[[-1,2440,"\n"]],[2440,2440],[2439,2439]]],[1573742685154,["28447@DESKTOP-BE7HQ26",[[1,2464,"\n"]],[2461,2461],[2462,2462]]],[1573742686697,["28447@DESKTOP-BE7HQ26",[[1,2465,"\n"]],[2462,2462],[2463,2463]]],[1573742689319,["28447@DESKTOP-BE7HQ26",[[1,2164,"\n"]],[2163,2163],[2164,2164]]],[1573742699540,["28447@DESKTOP-BE7HQ26",[[1,2164,"使用sti"]],[2164,2164],[2169,2169]]],[1573742699824,["28447@DESKTOP-BE7HQ26",[[-1,2168,"i"]],[2169,2169],[2168,2168]]],[1573742700045,["28447@DESKTOP-BE7HQ26",[[1,2168,"o"]],[2168,2168],[2169,2169]]],[1573742700802,["28447@DESKTOP-BE7HQ26",[[1,2169,"pd"]],[2169,2169],[2171,2171]]],[1573742701219,["28447@DESKTOP-BE7HQ26",[[-1,2170,"d"]],[2171,2171],[2170,2170]]],[1573742705916,["28447@DESKTOP-BE7HQ26",[[1,2170,"()方法去世"]],[2170,2170],[2176,2176]]],[1573742707449,["28447@DESKTOP-BE7HQ26",[[-1,2174,"去世"]],[2176,2176],[2174,2174]]],[1573742713818,["28447@DESKTOP-BE7HQ26",[[1,2174,"确实可以终止线程，但是"]],[2174,2174],[2185,2185]]],[1573742715774,["28447@DESKTOP-BE7HQ26",[[-1,2185,"\n"]],[2186,2186],[2185,2185]]],[1573742719434,["28447@DESKTOP-BE7HQ26",[[-1,2183,"但是"]],[2185,2185],[2183,2183]]],[1573742720717,["28447@DESKTOP-BE7HQ26",[[1,2183,"大门时"]],[2183,2183],[2186,2186]]],[1573742722094,["28447@DESKTOP-BE7HQ26",[[-1,2183,"大门时"]],[2186,2186],[2183,2183]]],[1573742723389,["28447@DESKTOP-BE7HQ26",[[1,2183,"但是"]],[2183,2183],[2185,2185]]],[1573742728923,["28447@DESKTOP-BE7HQ26",[[1,2232," "]],[2232,2232],[2233,2233]]],[1573743098529,["28447@DESKTOP-BE7HQ26",[[1,2485,"现在我们知道了使用 stop() 方式停止线程是非常不安全的方式，那么我们应该使用什么方法来停止线程呢？答案就是使用 interrupt() 方法来**中断线程**。"]],[2485,2485],[2568,2568]]],[1573743103862,["28447@DESKTOP-BE7HQ26",[[-1,2565,"**"]],[2567,2567],[2565,2565]]],[1573743105513,["28447@DESKTOP-BE7HQ26",[[-1,2559,"**"]],[2561,2561],[2559,2559]]],[1573743106642,["28447@DESKTOP-BE7HQ26",[[1,2567,"\n"]],[2564,2564],[2565,2565]]],[1573743106812,["28447@DESKTOP-BE7HQ26",[[1,2568,"\n"]],[2565,2565],[2566,2566]]],[1573743136038,["28447@DESKTOP-BE7HQ26",[[1,2566,"调用 interrupt() 方法仅仅是在当前线程中打一个停止的标记，并不是真的停止线程。也就是说，线程中断并不会立即终止线程，而是通知目标线程，有人希望你终止。至于目标线程收到通知后会如何处理，则完全由目标线程自行决定。这一点很重要，如果中断后，线程立即无条件退出，那么我们又会遇到 stop() 方法的老问题。"]],[2566,2566],[2723,2723]]],[1573743147709,["28447@DESKTOP-BE7HQ26",[[1,2611,"\n"]],[2611,2611],[2612,2612]]],[1573743148122,["28447@DESKTOP-BE7HQ26",[[1,2612,"\n"]],[2612,2612],[2613,2613]]],[1573743390826,["28447@DESKTOP-BE7HQ26",[[1,2726,"·"]],[2726,2726],[2727,2727]]],[1573743391525,["28447@DESKTOP-BE7HQ26",[[-1,2726,"·"]],[2727,2727],[2726,2726]]],[1573743391865,["28447@DESKTOP-BE7HQ26",[[1,2728,"\n"]],[2726,2726],[2727,2727]]],[1573743392905,["28447@DESKTOP-BE7HQ26",[[1,2727,"```"]],[2727,2727],[2730,2730]]],[1573743392934,["28447@DESKTOP-BE7HQ26",[[1,2730,"language\n```\n"]],[2730,2730],[2730,2738]]],[1573743393822,["28447@DESKTOP-BE7HQ26",[[-1,2730,"language"],[1,2738,"j"]],[2730,2738],[2731,2731]]],[1573743394120,["28447@DESKTOP-BE7HQ26",[[1,2731,"ava"]],[2731,2731],[2734,2734]]],[1573743394365,["28447@DESKTOP-BE7HQ26",[[1,2735,"\n"]],[2734,2734],[2735,2735]]],[1573743401509,["28447@DESKTOP-BE7HQ26",[[1,2735,"public  class InterruptThread1 extends Thread{ public static void main(String[] args) { try { InterruptThread1 t = new InterruptThread1(); t.start(); Thread.sleep(200); t.interrupt(); } catch (InterruptedException e) { e.printStackTrace(); } } @Override  public void run() { super.run(); for(int i = 0; i <= 200000; i++) { System.out.println(\"i=\" + i); } } }"]],[2735,2735],[3093,3093]]],[1573743405346,["28447@DESKTOP-BE7HQ26",[[-1,2735,"public  class InterruptThread1 extends Thread{ public static void main(String[] args) { try { InterruptThread1 t = new InterruptThread1(); t.start(); Thread.sleep(200); t.interrupt(); } catch (InterruptedException e) { e.printStackTrace(); } } @Override  public void run() { super.run(); for(int i = 0; i <= 200000; i++) { System.out.println(\"i=\" + i); } } }"]],[3093,3093],[2735,2735]]],[1573743430915,["28447@DESKTOP-BE7HQ26",[[1,2735,"public class demo5 extends Thread {\n\n    public static void main(String[] args) {\n        try {\n            demo5 t = new demo5();\n  t.start();\n  Thread.sleep(200);\n  t.interrupt();\n  } catch (InterruptedException e) {\n            e.printStackTrace();\n  }\n    }\n\n    @Override\n  public void run() {\n        super.run();\n for (int i = 0; i <= 200000; i++) {\n            //判断是否被中断\n  if (Thread.currentThread().isInterrupted()) {\n                //处理中断逻辑\n  break;\n  }\n            System.out.println(\"i=\" + i);\n  }\n    }\n}"]],[2735,2735],[3253,3253]]],[1573743435776,["28447@DESKTOP-BE7HQ26",[[-1,2735,"public class demo5 extends Thread {\n\n    public static void main(String[] args) {\n        try {\n            demo5 t = new demo5();\n  t.start();\n  Thread.sleep(200);\n  t.interrupt();\n  } catch (InterruptedException e) {\n            e.printStackTrace();\n  }\n    }\n\n    @Override\n  public void run() {\n        super.run();\n for (int i = 0; i <= 200000; i++) {\n            //判断是否被中断\n  if (Thread.currentThread().isInterrupted()) {\n                //处理中断逻辑\n  break;\n  }\n            System.out.println(\"i=\" + i);\n  }\n    }\n}"]],[3253,3253],[2735,2735]]],[1573743444554,["28447@DESKTOP-BE7HQ26",[[1,2735,"public class demo5 extends Thread {\n    \n    public static void main(String[] args) {\n        try {\n            demo5 t = new demo5();\n            t.start();\n            Thread.sleep(200);\n            t.interrupt();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void run() {\n        super.run();\n        for (int i = 0; i <= 200000; i++) {\n            //判断是否被中断\n            if (Thread.currentThread().isInterrupted()) {\n                //处理中断逻辑\n                break;\n            }\n            System.out.println(\"i=\" + i);\n        }\n    }\n}"]],[2735,2735],[3348,3348]]],[1573743450025,["28447@DESKTOP-BE7HQ26",[[1,3355,"\n"]],[3352,3352],[3353,3353]]],[1573743450249,["28447@DESKTOP-BE7HQ26",[[1,3356,"\n"]],[3353,3353],[3354,3354]]],[1573743461905,["28447@DESKTOP-BE7HQ26",[[1,3357,"\n"]],[3353,3353],[3354,3354]]],[1573743464051,["28447@DESKTOP-BE7HQ26",[[1,3354,"****"]],[3354,3354],[3356,3356]]],[1573743465335,["28447@DESKTOP-BE7HQ26",[[1,3356,"zhu"]],[3356,3356],[3359,3359]]],[1573743467055,["28447@DESKTOP-BE7HQ26",[[-1,3356,"zhu"]],[3359,3359],[3356,3356]]],[1573743472443,["28447@DESKTOP-BE7HQ26",[[1,3356,"注意："]],[3356,3356],[3359,3359]]],[1573743474125,["28447@DESKTOP-BE7HQ26",[[1,3361," "]],[3361,3361],[3362,3362]]],[1573743498656,["28447@DESKTOP-BE7HQ26",[[1,3362,"入宫"]],[3362,3362],[3364,3364]]],[1573743499975,["28447@DESKTOP-BE7HQ26",[[-1,3362,"入宫"]],[3364,3364],[3362,3362]]],[1573743511331,["28447@DESKTOP-BE7HQ26",[[1,3362,"如果希望线程t在终端"]],[3362,3362],[3372,3372]]],[1573743512665,["28447@DESKTOP-BE7HQ26",[[-1,3370,"终端"]],[3372,3372],[3370,3370]]],[1573743519835,["28447@DESKTOP-BE7HQ26",[[1,3370,"中断后停止， 就"]],[3370,3370],[3378,3378]]],[1573743520250,["28447@DESKTOP-BE7HQ26",[[-1,3376," 就"]],[3378,3378],[3376,3376]]],[1573743525470,["28447@DESKTOP-BE7HQ26",[[1,3376,"就必须先判断是狗"]],[3376,3376],[3384,3384]]],[1573743526485,["28447@DESKTOP-BE7HQ26",[[-1,3382,"是狗"]],[3384,3384],[3382,3382]]],[1573743535341,["28447@DESKTOP-BE7HQ26",[[1,3382,"是否被终端"]],[3382,3382],[3387,3387]]],[1573743536435,["28447@DESKTOP-BE7HQ26",[[-1,3385,"终端"]],[3387,3387],[3385,3385]]],[1573743538840,["28447@DESKTOP-BE7HQ26",[[1,3385,"中断"]],[3385,3385],[3387,3387]]],[1573743544576,["28447@DESKTOP-BE7HQ26",[[1,3387,"，并为他"]],[3387,3387],[3391,3391]]],[1573743544995,["28447@DESKTOP-BE7HQ26",[[-1,3390,"他"]],[3391,3391],[3390,3390]]],[1573743554080,["28447@DESKTOP-BE7HQ26",[[1,3390,"它增加相应的终端"]],[3390,3390],[3398,3398]]],[1573743556875,["28447@DESKTOP-BE7HQ26",[[-1,3396,"终端"]],[3398,3398],[3396,3396]]],[1573743561321,["28447@DESKTOP-BE7HQ26",[[1,3396,"中断处理diamagnetic"]],[3396,3396],[3411,3411]]],[1573743564475,["28447@DESKTOP-BE7HQ26",[[-1,3400,"diamagnetic"]],[3411,3411],[3400,3400]]],[1573743566898,["28447@DESKTOP-BE7HQ26",[[1,3400,"代码："]],[3400,3400],[3403,3403]]],[1573743569145,["28447@DESKTOP-BE7HQ26",[[-1,3402,"："]],[3403,3403],[3402,3402]]],[1573743578006,["28447@DESKTOP-BE7HQ26",[[1,3406,"\n"]],[3402,3402],[3403,3403]]],[1573743579509,["28447@DESKTOP-BE7HQ26",[[1,3403,"```"]],[3403,3403],[3406,3406]]],[1573743579545,["28447@DESKTOP-BE7HQ26",[[1,3406,"language\n```\n"]],[3406,3406],[3406,3414]]],[1573743580187,["28447@DESKTOP-BE7HQ26",[[-1,3406,"language"],[1,3414,"j"]],[3406,3414],[3407,3407]]],[1573743580521,["28447@DESKTOP-BE7HQ26",[[1,3407,"ava"]],[3407,3407],[3410,3410]]],[1573743580775,["28447@DESKTOP-BE7HQ26",[[1,3411,"\n"]],[3410,3410],[3411,3411]]],[1573743608866,["28447@DESKTOP-BE7HQ26",[[1,3411,"//判断是否被中断  if(Thread.currentThread().isInterrupted()){ //处理中断逻辑  break; }"]],[3411,3411],[3484,3484]]],[1573743610621,["28447@DESKTOP-BE7HQ26",[[-1,3411,"//判断是否被中断  if(Thread.currentThread().isInterrupted()){ //处理中断逻辑  break; }"]],[3484,3484],[3411,3411]]],[1573743618433,["28447@DESKTOP-BE7HQ26",[[1,3411,"            if (Thread.currentThread().isInterrupted()) {\n                //处理中断逻辑\n                break;\n            }\n            System.out.println(\"i=\" + i);"]],[3411,3411],[3572,3572]]],[1573743667655,["28447@DESKTOP-BE7HQ26",[[-1,3411,"            "],[-1,3425," "],[-1,3466," "],[-1,3473,"            "],[-1,3498,"            "],[-1,3517,"            "],[-1,3530,"\n            System.out.println(\"i=\" + i);"]],[3411,3572],[3480,3480]]],[1573743697215,["28447@DESKTOP-BE7HQ26",[[1,3486,"zhe"]],[3486,3486],[3489,3489]]],[1573743697997,["28447@DESKTOP-BE7HQ26",[[-1,3486,"zhe"]],[3489,3489],[3486,3486]]],[1573743698181,["28447@DESKTOP-BE7HQ26",[[-1,3488,"\n"]],[3486,3486],[3485,3485]]],[1573743703331,["28447@DESKTOP-BE7HQ26",[[1,3488,"\n"]],[3485,3485],[3486,3486]]],[1573743703844,["28447@DESKTOP-BE7HQ26",[[1,3486,"这种方式看起来与之前介绍的“使用标志位终止线程”非常类似，**但是在遇到 sleep() 或者 wait() 这样的操作，我们只能通过中断来处理了**。"]],[3486,3486],[3562,3562]]],[1573743705724,["28447@DESKTOP-BE7HQ26",[[1,3565,"\n"]],[3562,3562],[3563,3563]]],[1573743788186,["28447@DESKTOP-BE7HQ26",[[1,3563,"Thread.sleep() 方法由于中断而抛出的异常，是会清除中断标记的。"]],[3563,3563],[3601,3601]]],[1573743801534,["28447@DESKTOP-BE7HQ26",[[1,3563,"\n"]],[3562,3562],[3563,3563]]],[1573743801733,["28447@DESKTOP-BE7HQ26",[[1,3564,"\n"]],[3563,3563],[3564,3564]]],[1573743802166,["28447@DESKTOP-BE7HQ26",[[1,3564,"`public static native void sleep(long millis) throws InterruptedException`\n\nThread.sleep() 方法会抛出一个 InterruptedException 异常，当线程被 sleep() 休眠时，如果被中断，这会就抛出这个异常。"]],[3564,3564],[3720,3720]]],[1573743805081,["28447@DESKTOP-BE7HQ26",[[1,3721,"\n"]],[3720,3720],[3721,3721]]],[1573743810621,["28447@DESKTOP-BE7HQ26",[[1,3763,"\n"]],[3760,3760],[3761,3761]]],[1573743810861,["28447@DESKTOP-BE7HQ26",[[1,3764,"\n"]],[3761,3761],[3762,3762]]],[1573743819629,["28447@DESKTOP-BE7HQ26",[[1,3762,"【】"]],[3762,3762],[3764,3764]]],[1573743820421,["28447@DESKTOP-BE7HQ26",[[-1,3762,"【】"]],[3764,3764],[3762,3762]]],[1573743821085,["28447@DESKTOP-BE7HQ26",[[1,3762,"[]"]],[3762,3762],[3764,3764]]],[1573743825602,["28447@DESKTOP-BE7HQ26",[[1,3763,"🔍|"]],[3763,3763],[3766,3766]]],[1573743826161,["28447@DESKTOP-BE7HQ26",[[1,3765," "]],[3765,3765],[3766,3766]]],[1573743831959,["28447@DESKTOP-BE7HQ26",[[1,3767," java"]],[3767,3767],[3772,3772]]],[1573743833865,["28447@DESKTOP-BE7HQ26",[[-1,3768,"j"]],[3769,3769],[3768,3768]]],[1573743835439,["28447@DESKTOP-BE7HQ26",[[1,3768,"J"]],[3768,3768],[3769,3769]]],[1573743839256,["28447@DESKTOP-BE7HQ26",[[1,3772,"终止线程的"]],[3772,3772],[3777,3777]]],[1573743842248,["28447@DESKTOP-BE7HQ26",[[1,3777,"三种方式"]],[3777,3777],[3781,3781]]],[1573743846423,["28447@DESKTOP-BE7HQ26",[[1,3782,"[https://www.cnblogs.com/liyutian/p/10196044.html](https://www.cnblogs.com/liyutian/p/10196044.html)"]],[3782,3782],[3882,3882]]],[1573743850376,["28447@DESKTOP-BE7HQ26",[[-1,3781,"][https://www.cnblogs.com/liyutian/p/10196044.html]"]],[3782,3832],[3781,3781]]],[1573743855447,["28447@DESKTOP-BE7HQ26",[[1,3781,"] "]],[3781,3781],[3783,3783]]],[1573743856836,["28447@DESKTOP-BE7HQ26",[[-1,3782," "]],[3783,3783],[3782,3782]]],[1573743870381,["28447@DESKTOP-BE7HQ26",[[-1,8,"3"]],[9,9],[8,8]]],[1573743870839,["28447@DESKTOP-BE7HQ26",[[1,8,"sa"]],[8,8],[10,10]]],[1573743871521,["28447@DESKTOP-BE7HQ26",[[-1,8,"sa"]],[10,10],[8,8]]],[1573743872874,["28447@DESKTOP-BE7HQ26",[[1,8,"三"]],[8,8],[9,9]]],[1573743874397,["28447@DESKTOP-BE7HQ26",[[-1,14,"\n"]],[14,14],[13,13]]]],null,"28447@DESKTOP-BE7HQ26"]]}