{"compress":true,"commitItems":[["d64648ff-eaa4-45ab-966a-d22576af02dc",1555932390938,"",[[1555932352362,["28447@DESKTOP-BE7HQ26",[[1,0,"# transform和action算子\n\n\n\n"]],[0,0],[23,23]]],[1555932354798,["28447@DESKTOP-BE7HQ26",[[-1,23,"\n"],[1,24,"c"]],[23,23],[24,24]]],[1555932355104,["28447@DESKTOP-BE7HQ26",[[1,24,"han"]],[24,24],[27,27]]],[1555932356030,["28447@DESKTOP-BE7HQ26",[[-1,24,"han"]],[27,27],[24,24]]],[1555932356206,["28447@DESKTOP-BE7HQ26",[[-1,23,"c"],[1,24,"\n"]],[24,24],[23,23]]],[1555932357870,["28447@DESKTOP-BE7HQ26",[[-1,23,"\n"],[1,24,"常见"]],[23,23],[25,25]]],[1555932362544,["28447@DESKTOP-BE7HQ26",[[1,25,"transform算子："]],[25,25],[37,37]]],[1555932362750,["28447@DESKTOP-BE7HQ26",[[1,37,"\n\n"]],[37,37],[38,38]]],[1555932363270,["28447@DESKTOP-BE7HQ26",[[1,38,"1\\. map(func):对调用map的RDD数据集中的每个element都使用func，然后返回一个新的RDD,这个返回的数据集是分布式的数据集\n2\\. filter(func) : 对调用filter的RDD数据集中的每个元素都使用func，然后返回一个包含使func为true的元素构成的RDD\n3\\. flatMap(func):和map差不多，但是flatMap生成的是多个结果\n4\\. mapPartitions(func):和map很像，但是map是每个element，而mapPartitions是每个partition\n5\\. mapPartitionsWithSplit(func):和mapPartitions很像，但是func作用的是其中一个split上，所以func中应该有index\n6\\. sample(withReplacement,faction,seed):抽样\n7\\. union(otherDataset)：返回一个新的dataset，包含源dataset和给定dataset的元素的集合\n8\\. distinct([numTasks]):返回一个新的dataset，这个dataset含有的是源dataset中的distinct的element\n9\\. groupByKey(numTasks):返回(K,Seq[V])，也就是hadoop中reduce函数接受的key-valuelist\n10\\. reduceByKey(func,[numTasks]):就是用一个给定的reduce func再作用在groupByKey产生的(K,Seq[V]),比如求和，求平均数\n11\\. sortByKey([ascending],[numTasks]):按照key来进行排序，是升序还是降序，ascending是boolean类型\n12\\. join(otherDataset,[numTasks]):当有两个KV的dataset(K,V)和(K,W)，返回的是(K,(V,W))的dataset,numTasks为并发的任务数\n13\\. cogroup(otherDataset,[numTasks]):当有两个KV的dataset(K,V)和(K,W)，返回的是(K,Seq[V],Seq[W])的dataset,numTasks为并发的任务数\n14\\. cartesian(otherDataset)：笛卡尔积就是m*n，大家懂的"]],[38,38],[1077,1077]]],[1555932366686,["28447@DESKTOP-BE7HQ26",[[1,1078,"\n"]],[1077,1077],[1078,1078]]],[1555932366870,["28447@DESKTOP-BE7HQ26",[[1,1079,"\n"]],[1078,1078],[1079,1079]]],[1555932378698,["28447@DESKTOP-BE7HQ26",[[-1,1079,"\n"],[1,1080,"action"]],[1079,1079],[1085,1085]]],[1555932381483,["28447@DESKTOP-BE7HQ26",[[1,1085,"常见算子"]],[1085,1085],[1089,1089]]],[1555932382215,["28447@DESKTOP-BE7HQ26",[[1,1089,"\n\n"]],[1089,1089],[1090,1090]]],[1555932382519,["28447@DESKTOP-BE7HQ26",[[1,1090,"1\\. reduce(func)：说白了就是聚集，但是传入的函数是两个参数输入返回一个值，这个函数必须是满足交换律和结合律的\n2\\. collect()：一般在filter或者足够小的结果的时候，再用collect封装返回一个数组\n3\\. count():返回的是dataset中的element的个数\n4\\. first():返回的是dataset中的第一个元素\n5\\. take(n):返回前n个elements，这个士driver program返回的\n6\\. takeSample(withReplacement，num，seed)：抽样返回一个dataset中的num个元素，随机种子seed\n7\\. saveAsTextFile（path）：把dataset写到一个text file中，或者hdfs，或者hdfs支持的文件系统中，spark把每条记录都转换为一行记录，然后写到file中\n8\\. saveAsSequenceFile(path):只能用在key-value对上，然后生成SequenceFile写到本地或者hadoop文件系统\n9\\. countByKey()：返回的是key对应的个数的一个map，作用于一个RDD\n10\\. foreach(func):对dataset中的每个元素都使用func"]],[1090,1090],[1654,1654]]],[1555932385630,["28447@DESKTOP-BE7HQ26",[[-1,1079,"action常见算子"]],[1079,1089],[1079,1079]]],[1555932386327,["28447@DESKTOP-BE7HQ26",[[1,1079,"****"]],[1079,1079],[1081,1081]]],[1555932386640,["28447@DESKTOP-BE7HQ26",[[1,1081,"action常见算子"]],[1081,1081],[1091,1091]]],[1555932388887,["28447@DESKTOP-BE7HQ26",[[-1,23,"常见transform算子："]],[23,37],[23,23]]],[1555932390122,["28447@DESKTOP-BE7HQ26",[[1,23,"****"]],[23,23],[25,25]]],[1555932390431,["28447@DESKTOP-BE7HQ26",[[1,25,"常见transform算子："]],[25,25],[39,39]]],[1555932395186,["28447@DESKTOP-BE7HQ26",[[1,23,"# "]],[23,23],[25,25]]],[1555932396245,["28447@DESKTOP-BE7HQ26",[[-1,24," "]],[25,25],[24,24]]],[1555932397483,["28447@DESKTOP-BE7HQ26",[[1,24,"# "]],[24,24],[26,26]]],[1555932401942,["28447@DESKTOP-BE7HQ26",[[1,1086,"## "]],[1086,1086],[1089,1089]]],[1555932787965,["28447@DESKTOP-BE7HQ26",[[1,1669,"\n"]],[1668,1668],[1669,1669]]],[1555932788156,["28447@DESKTOP-BE7HQ26",[[1,1670,"\n"]],[1669,1669],[1670,1670]]],[1555932789165,["28447@DESKTOP-BE7HQ26",[[1,1670,"[常见算子](https://my.oschina.net/134596/blog/3037972)"]],[1670,1670],[1720,1720]]]],null,"28447@DESKTOP-BE7HQ26"]]}