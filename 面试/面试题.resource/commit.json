{"compress":true,"commitItems":[["afa0c120-7710-4a67-bbb5-836313713054",1552833605596,"",[[1552833547517,["28447@DESKTOP-BE7HQ26",[[1,0,"# 面试题\n\n\n\n"]],[0,0],[8,8]]],[1552833550067,["28447@DESKTOP-BE7HQ26",[[-1,8,"\n"],[1,9,"#"]],[8,8],[9,9]]],[1552833550526,["28447@DESKTOP-BE7HQ26",[[1,9,"# "]],[9,9],[11,11]]],[1552833552082,["28447@DESKTOP-BE7HQ26",[[1,7,"【】"]],[7,7],[9,9]]],[1552833552743,["28447@DESKTOP-BE7HQ26",[[-1,7,"【】"]],[9,9],[7,7]]],[1552833553426,["28447@DESKTOP-BE7HQ26",[[1,7,"[]"]],[7,7],[9,9]]],[1552833554564,["28447@DESKTOP-BE7HQ26",[[1,8,"toc"]],[8,8],[11,11]]],[1552833557152,["28447@DESKTOP-BE7HQ26",[[1,13,"\n"]],[12,12],[13,13]]],[1552833558557,["28447@DESKTOP-BE7HQ26",[[1,16,"\n"]],[16,16],[17,17]]],[1552833559893,["28447@DESKTOP-BE7HQ26",[[-1,16,"\n"]],[17,17],[16,16]]],[1552833560350,["28447@DESKTOP-BE7HQ26",[[-1,14,"##"]],[16,16],[14,14]]],[1552833561178,["28447@DESKTOP-BE7HQ26",[[1,14,"*"]],[14,14],[15,15]]],[1552833561620,["28447@DESKTOP-BE7HQ26",[[1,16," "]],[15,15],[16,16]]],[1552833563607,["28447@DESKTOP-BE7HQ26",[[1,16,"xian"]],[16,16],[20,20]]],[1552833564470,["28447@DESKTOP-BE7HQ26",[[-1,16,"xian"]],[20,20],[16,16]]],[1552833577087,["28447@DESKTOP-BE7HQ26",[[1,17," 进程与线程的区别\n\n*   是否有了解其他开源分布式存储框架和协议？\n\n*   项目存在的缺点？如何优化？\n\n*   单点故障问题如何解决？\n\n*   多数据节点多线程写的一致性保证？\n\n*   多机备份 "]],[14,16],[120,120]]],[1552833579671,["28447@DESKTOP-BE7HQ26",[[1,27,"* \n"]],[26,26],[29,29]]],[1552833580963,["28447@DESKTOP-BE7HQ26",[[-1,27,"* "]],[29,29],[27,27]]],[1552833603189,["28447@DESKTOP-BE7HQ26",[[1,27,"xia"]],[27,27],[30,30]]],[1552833603881,["28447@DESKTOP-BE7HQ26",[[-1,27,"xia"]],[30,30],[27,27]]],[1552833619078,["28447@DESKTOP-BE7HQ26",[[1,27,"狭义上讲进程是一段具有"]],[27,27],[38,38]]],[1552833620878,["28447@DESKTOP-BE7HQ26",[[-1,36,"具有"]],[38,38],[36,36]]],[1552833625700,["28447@DESKTOP-BE7HQ26",[[1,36,"程序的执行过程"]],[36,36],[43,43]]],[1552833636720,["28447@DESKTOP-BE7HQ26",[[1,27,"* \n"]],[26,26],[29,29]]],[1552833637899,["28447@DESKTOP-BE7HQ26",[[-1,27,"* "]],[29,29],[27,27]]],[1552833639990,["28447@DESKTOP-BE7HQ26",[[1,46,"\n"]],[45,45],[46,46]]],[1552833641868,["28447@DESKTOP-BE7HQ26",[[1,28,"  "]],[28,28],[30,30]]],[1552833644059,["28447@DESKTOP-BE7HQ26",[[-1,28,"  "]],[30,30],[28,28]]],[1552833648971,["28447@DESKTOP-BE7HQ26",[[1,44,"，"]],[44,44],[45,45]]],[1552833742748,["28447@DESKTOP-BE7HQ26",[[1,48,"\n"]],[45,45],[46,46]]],[1552833750639,["28447@DESKTOP-BE7HQ26",[[1,46,"在一个进程共呢个"]],[46,46],[54,54]]],[1552833751579,["28447@DESKTOP-BE7HQ26",[[-1,51,"共呢个"]],[54,54],[51,51]]],[1552833754591,["28447@DESKTOP-BE7HQ26",[[1,51,"额你不"]],[51,51],[54,54]]],[1552833755279,["28447@DESKTOP-BE7HQ26",[[-1,51,"额你不"]],[54,54],[51,51]]],[1552833770218,["28447@DESKTOP-BE7HQ26",[[1,51,"内部，需要同时干很多事情，"]],[51,51],[64,64]]],[1552833776282,["28447@DESKTOP-BE7HQ26",[[-1,56,"同时干很多事情，"]],[64,64],[56,56]]],[1552833777852,["28447@DESKTOP-BE7HQ26",[[1,56,"同时"]],[56,56],[58,58]]],[1552833788985,["28447@DESKTOP-BE7HQ26",[[1,58,"执行多个“”"]],[58,58],[64,64]]],[1552833790276,["28447@DESKTOP-BE7HQ26",[[-1,62,"“”"]],[64,64],[62,62]]],[1552833796033,["28447@DESKTOP-BE7HQ26",[[1,62,"子任务，我们讲"]],[62,62],[69,69]]],[1552833798101,["28447@DESKTOP-BE7HQ26",[[-1,66,"我们讲"]],[69,69],[66,66]]],[1552833811760,["28447@DESKTOP-BE7HQ26",[[1,66,"我们将进程内的这些“”"]],[66,66],[77,77]]],[1552833813594,["28447@DESKTOP-BE7HQ26",[[1,76,"子任务"]],[76,76],[79,79]]],[1552833818404,["28447@DESKTOP-BE7HQ26",[[1,80,"成武线程"]],[80,80],[84,84]]],[1552833820310,["28447@DESKTOP-BE7HQ26",[[-1,80,"成武"]],[82,82],[80,80]]],[1552833822338,["28447@DESKTOP-BE7HQ26",[[1,80,"称为"]],[80,80],[82,82]]],[1552833855311,["28447@DESKTOP-BE7HQ26",[[1,84,"（）"]],[84,84],[86,86]]],[1552833858240,["28447@DESKTOP-BE7HQ26",[[1,85,"Thread"]],[85,85],[91,91]]],[1552833871198,["28447@DESKTOP-BE7HQ26",[[-1,95,"*   是否有了解其他开源分布式存储框架和协议？"]],[95,119],[95,95]]],[1552833872281,["28447@DESKTOP-BE7HQ26",[[-1,97,"*   项目存在的缺点？如何优化？\n"]],[96,114],[96,96]]],[1552833873057,["28447@DESKTOP-BE7HQ26",[[-1,97,"\n"]],[96,96],[95,95]]],[1552833873439,["28447@DESKTOP-BE7HQ26",[[-1,96,"\n"]],[95,95],[94,94]]],[1552833874539,["28447@DESKTOP-BE7HQ26",[[-1,96,"*   单点故障问题如何解决？"]],[96,111],[96,96]]],[1552833878518,["28447@DESKTOP-BE7HQ26",[[-1,97,"\n"]],[97,97],[96,96]]],[1552833878886,["28447@DESKTOP-BE7HQ26",[[-1,96,"\n"]],[96,96],[95,95]]],[1552833879375,["28447@DESKTOP-BE7HQ26",[[-1,95,"\n"]],[95,95],[94,94]]],[1552833881775,["28447@DESKTOP-BE7HQ26",[[-1,117,"*   多机备份 "],[1,126,"\n"]],[117,126],[117,117]]],[1552833904989,["28447@DESKTOP-BE7HQ26",[[1,95,"作者：viccto\n链接：[https://www.nowcoder.com/discuss/164207?type=2](https://www.nowcoder.com/discuss/164207?type=2)\n来源：牛客网\n\n"],[-1,100,"数据节点多线程写的一致性保证？"],[1,115,"线程通信和同步机制：加锁、信号量、条件变量\n\n    *   多进程与多线程的区别\n\n    *   共享内存、与malloc的区别\n\n    *   HTTP和HTTP2的了解\n\n    *   TCP与UDP的区别\n\n    *   查找的常用数据结构：二叉树、跳表、hash\n\n    *   类中一般包括哪些默认生成的函数：构造、析构、复制构造、赋值操作符、取地址操作符等\n\n    *   常用的STL数据结构、Vector、Map的底层实现\n\n    *   Top k问题\n\n    *   常用的调试方法和工具\n\n    *   现有开源分布式存储的系统或协议是否了解？\n\n    *   分布式存储系统相关问题：数据同步、单点故障、副本容灾、读写一致性等\n\n    *   本科期间参与的竞赛作品"]],[95,115],[575,575]]],[1552833907400,["28447@DESKTOP-BE7HQ26",[[-1,95,"作者：viccto\n链接：[https://www.nowcoder.com/discuss/164207?type=2](https://www.nowcoder.com/discuss/164207?type=2)\n来源：牛客网"]],[95,211],[95,95]]],[1552833907838,["28447@DESKTOP-BE7HQ26",[[-1,96,"\n"]],[95,95],[94,94]]],[1552833908361,["28447@DESKTOP-BE7HQ26",[[-1,95,"\n"]],[94,94],[93,93]]],[1552833913569,["28447@DESKTOP-BE7HQ26",[[-1,124,"   "]],[126,126],[123,123]]],[1552833915103,["28447@DESKTOP-BE7HQ26",[[-1,123," "]],[124,124],[123,123]]],[1552833917190,["28447@DESKTOP-BE7HQ26",[[-1,140,"   "]],[142,142],[139,139]]],[1552833918722,["28447@DESKTOP-BE7HQ26",[[-1,139," "]],[139,140],[139,139]]],[1552833920115,["28447@DESKTOP-BE7HQ26",[[-1,160,"    "]],[160,164],[160,160]]],[1552833921299,["28447@DESKTOP-BE7HQ26",[[-1,179,"    "]],[179,183],[179,179]]],[1552833922468,["28447@DESKTOP-BE7HQ26",[[-1,195,"    "]],[195,199],[195,195]]],[1552833924144,["28447@DESKTOP-BE7HQ26",[[-1,222,"    "]],[222,226],[222,222]]],[1552833925165,["28447@DESKTOP-BE7HQ26",[[-1,269,"   "]],[268,271],[268,268]]],[1552833926467,["28447@DESKTOP-BE7HQ26",[[-1,268," "]],[268,269],[268,268]]],[1552833927692,["28447@DESKTOP-BE7HQ26",[[-1,300,"    "]],[300,304],[300,300]]],[1552833929751,["28447@DESKTOP-BE7HQ26",[[-1,313,"    "]],[313,317],[313,313]]],[1552833931478,["28447@DESKTOP-BE7HQ26",[[-1,329,"    "]],[329,333],[329,329]]],[1552833933259,["28447@DESKTOP-BE7HQ26",[[-1,355,"    "]],[355,359],[355,355]]],[1552833934760,["28447@DESKTOP-BE7HQ26",[[-1,394,"    "]],[394,398],[394,394]]],[1552833939456,["28447@DESKTOP-BE7HQ26",[[1,123,"\n"]],[122,122],[123,123]]],[1552833939878,["28447@DESKTOP-BE7HQ26",[[1,124,"\n"]],[123,123],[124,124]]],[1552833988766,["28447@DESKTOP-BE7HQ26",[[1,28,"*"]],[28,28],[29,29]]],[1552833989646,["28447@DESKTOP-BE7HQ26",[[1,28," "]],[28,28],[29,29]]],[1552833990030,["28447@DESKTOP-BE7HQ26",[[1,30," "]],[30,30],[31,31]]],[1552833992772,["28447@DESKTOP-BE7HQ26",[[-1,30," "]],[31,31],[30,30]]],[1552833993511,["28447@DESKTOP-BE7HQ26",[[1,29,"  "]],[29,29],[31,31]]],[1552833994960,["28447@DESKTOP-BE7HQ26",[[-1,28,"   "]],[31,31],[28,28]]],[1552833995527,["28447@DESKTOP-BE7HQ26",[[-1,27,"\n"]],[28,28],[27,27]]],[1552833996104,["28447@DESKTOP-BE7HQ26",[[1,27,"  "]],[27,27],[29,29]]],[1552833996974,["28447@DESKTOP-BE7HQ26",[[1,30,"  "]],[30,30],[32,32]]],[1552834000488,["28447@DESKTOP-BE7HQ26",[[1,50,"*"]],[50,50],[51,51]]],[1552834001364,["28447@DESKTOP-BE7HQ26",[[1,50,"  "]],[50,50],[52,52]]],[1552834004327,["28447@DESKTOP-BE7HQ26",[[-1,50,"  "]],[52,52],[50,50]]],[1552834004810,["28447@DESKTOP-BE7HQ26",[[1,50,"  "]],[50,50],[52,52]]],[1552834005760,["28447@DESKTOP-BE7HQ26",[[1,53,"  "]],[53,53],[55,55]]],[1552834013298,["28447@DESKTOP-BE7HQ26",[[-1,30,"  "]],[32,32],[30,30]]],[1552834013798,["28447@DESKTOP-BE7HQ26",[[1,30,"  "]],[30,30],[32,32]]],[1552834015374,["28447@DESKTOP-BE7HQ26",[[-1,54," "]],[55,55],[54,54]]],[1552834015696,["28447@DESKTOP-BE7HQ26",[[1,52,"  "]],[54,54],[56,56]]],[1552834021680,["28447@DESKTOP-BE7HQ26",[[-1,50,"    * "]],[56,56],[50,50]]],[1552834023968,["28447@DESKTOP-BE7HQ26",[[1,50,"*"]],[50,50],[51,51]]],[1552834025145,["28447@DESKTOP-BE7HQ26",[[1,51," "]],[51,51],[52,52]]],[1552834026803,["28447@DESKTOP-BE7HQ26",[[1,50,"  "]],[50,50],[52,52]]],[1552834029519,["28447@DESKTOP-BE7HQ26",[[-1,17," "]],[17,17],[16,16]]],[1552834030873,["28447@DESKTOP-BE7HQ26",[[-1,16," "]],[17,17],[16,16]]],[1552834039282,["28447@DESKTOP-BE7HQ26",[[-1,104," "]],[103,103],[102,102]]],[1552835010539,["28447@DESKTOP-BE7HQ26",[[-1,401,"*   本科期间参与的竞赛作品"]],[401,416],[401,401]]],[1552835026273,["28447@DESKTOP-BE7HQ26",[[1,401,"* kafka集群的规模，小范围"]],[401,401],[417,417]]],[1552835027110,["28447@DESKTOP-BE7HQ26",[[-1,414,"小范围"]],[417,417],[414,414]]],[1552835032747,["28447@DESKTOP-BE7HQ26",[[1,414,"消费速度是多少"]],[414,414],[421,421]]],[1552835033402,["28447@DESKTOP-BE7HQ26",[[1,422,"* \n"]],[421,421],[424,424]]],[1552835035419,["28447@DESKTOP-BE7HQ26",[[1,422,"  "]],[422,422],[424,424]]],[1552835036883,["28447@DESKTOP-BE7HQ26",[[1,426," "]],[425,425],[426,426]]],[1552835043098,["28447@DESKTOP-BE7HQ26",[[1,426,"一般中小公司的"]],[426,426],[433,433]]],[1552835047059,["28447@DESKTOP-BE7HQ26",[[1,433,"是10哥"]],[433,433],[437,437]]],[1552835047841,["28447@DESKTOP-BE7HQ26",[[-1,436,"哥"]],[437,437],[436,436]]],[1552835055014,["28447@DESKTOP-BE7HQ26",[[1,436,"个节点，美妙"]],[436,436],[442,442]]],[1552835055673,["28447@DESKTOP-BE7HQ26",[[-1,440,"美妙"]],[442,442],[440,440]]],[1552835056735,["28447@DESKTOP-BE7HQ26",[[1,440,"没"]],[440,440],[441,441]]],[1552835057117,["28447@DESKTOP-BE7HQ26",[[-1,440,"没"]],[441,441],[440,440]]],[1552835060950,["28447@DESKTOP-BE7HQ26",[[1,440,"每秒20《"]],[440,440],[445,445]]],[1552835061465,["28447@DESKTOP-BE7HQ26",[[-1,444,"《"]],[445,445],[444,444]]],[1552835062889,["28447@DESKTOP-BE7HQ26",[[1,444,"M\n  "]],[444,444],[448,448]]],[1552835065709,["28447@DESKTOP-BE7HQ26",[[-1,448," "]],[448,448],[447,447]]],[1552835066861,["28447@DESKTOP-BE7HQ26",[[1,447,"*"]],[447,447],[448,448]]],[1552835067584,["28447@DESKTOP-BE7HQ26",[[-1,447,"* "]],[448,448],[446,446]]],[1552835068835,["28447@DESKTOP-BE7HQ26",[[1,446,"*"]],[446,446],[447,447]]],[1552835069588,["28447@DESKTOP-BE7HQ26",[[1,448," "]],[447,447],[448,448]]],[1552835074060,["28447@DESKTOP-BE7HQ26",[[1,448,"hdfss"]],[448,448],[453,453]]],[1552835074602,["28447@DESKTOP-BE7HQ26",[[-1,452,"s"]],[453,453],[452,452]]],[1552835079378,["28447@DESKTOP-BE7HQ26",[[1,452,"上传文件过程"]],[452,452],[458,458]]],[1552835083156,["28447@DESKTOP-BE7HQ26",[[1,446,"  * \n"]],[445,445],[450,450]]],[1552835084474,["28447@DESKTOP-BE7HQ26",[[-1,448,"* "]],[450,450],[448,448]]],[1552835085992,["28447@DESKTOP-BE7HQ26",[[1,463,"* \n"]],[462,462],[465,465]]],[1552835087058,["28447@DESKTOP-BE7HQ26",[[1,463,"  "]],[465,465],[467,467]]],[1552835093819,["28447@DESKTOP-BE7HQ26",[[1,467,"··"]],[467,467],[469,469]]],[1552835094596,["28447@DESKTOP-BE7HQ26",[[-1,467,"··"]],[469,469],[467,467]]],[1552835095222,["28447@DESKTOP-BE7HQ26",[[1,467,"``"]],[467,467],[469,469]]],[1552835095763,["28447@DESKTOP-BE7HQ26",[[1,468,"1"]],[468,468],[469,469]]],[1552835099203,["28447@DESKTOP-BE7HQ26",[[1,470," you"]],[470,470],[474,474]]],[1552835100417,["28447@DESKTOP-BE7HQ26",[[-1,471,"you"]],[474,474],[471,471]]],[1552835103954,["28447@DESKTOP-BE7HQ26",[[1,471,"客户端"]],[471,471],[474,474]]],[1552835105134,["28447@DESKTOP-BE7HQ26",[[1,474,"像"]],[474,474],[475,475]]],[1552835105663,["28447@DESKTOP-BE7HQ26",[[-1,474,"像"]],[475,475],[474,474]]],[1552835121291,["28447@DESKTOP-BE7HQ26",[[1,474,"向namenode节点发送请求"]],[474,474],[489,489]]],[1552835122067,["28447@DESKTOP-BE7HQ26",[[1,490,"  * \n"]],[489,489],[494,494]]],[1552835123751,["28447@DESKTOP-BE7HQ26",[[1,494,"``"]],[494,494],[496,496]]],[1552835124568,["28447@DESKTOP-BE7HQ26",[[1,495,"2"]],[495,495],[496,496]]],[1552835127681,["28447@DESKTOP-BE7HQ26",[[1,497,"那么"]],[497,497],[499,499]]],[1552835128712,["28447@DESKTOP-BE7HQ26",[[-1,497,"那么"]],[499,499],[497,497]]],[1552835149890,["28447@DESKTOP-BE7HQ26",[[1,497," namenode 向客户端返回可以存数据的DataNode"]],[497,497],[527,527]]],[1552835151240,["28447@DESKTOP-BE7HQ26",[[1,528,"  * \n"]],[527,527],[532,532]]],[1552835153092,["28447@DESKTOP-BE7HQ26",[[1,532,"··"]],[532,532],[534,534]]],[1552835153874,["28447@DESKTOP-BE7HQ26",[[-1,532,"··"]],[534,534],[532,532]]],[1552835154498,["28447@DESKTOP-BE7HQ26",[[1,532,"``"]],[532,532],[534,534]]],[1552835155450,["28447@DESKTOP-BE7HQ26",[[1,533,"3"]],[533,533],[534,534]]],[1552835158423,["28447@DESKTOP-BE7HQ26",[[1,535," ke"]],[535,535],[538,538]]],[1552835159074,["28447@DESKTOP-BE7HQ26",[[-1,536,"ke"]],[538,538],[536,536]]],[1552835163591,["28447@DESKTOP-BE7HQ26",[[1,536,"客户端首先"]],[536,536],[541,541]]],[1552835168779,["28447@DESKTOP-BE7HQ26",[[1,541,"更具返回的信息将"]],[541,541],[549,549]]],[1552835200667,["28447@DESKTOP-BE7HQ26",[[-1,541,"更具返回的信息将"]],[549,549],[541,541]]],[1552835218775,["28447@DESKTOP-BE7HQ26",[[1,541,"根据返回的信息，先将文件（）"]],[541,541],[555,555]]],[1552835224034,["28447@DESKTOP-BE7HQ26",[[1,553,"分块"]],[553,553],[555,555]]],[1552835230492,["28447@DESKTOP-BE7HQ26",[[1,556,"Hadoop2.x"]],[556,556],[565,565]]],[1552835231922,["28447@DESKTOP-BE7HQ26",[[-1,564,"x"]],[565,565],[564,564]]],[1552835244507,["28447@DESKTOP-BE7HQ26",[[1,564,"X版本每个block为128M,zh"]],[564,564],[582,582]]],[1552835245116,["28447@DESKTOP-BE7HQ26",[[-1,580,"zh"]],[582,582],[580,580]]],[1552835247583,["28447@DESKTOP-BE7HQ26",[[1,580,"之前的"]],[580,580],[583,583]]],[1552835248454,["28447@DESKTOP-BE7HQ26",[[-1,582,"的"]],[583,583],[582,582]]],[1552835254511,["28447@DESKTOP-BE7HQ26",[[1,582,"的版本为64M"]],[582,582],[589,589]]],[1552835255178,["28447@DESKTOP-BE7HQ26",[[1,591,"  * \n"]],[590,590],[595,595]]],[1552835269433,["28447@DESKTOP-BE7HQ26",[[1,595,"ke"]],[595,595],[597,597]]],[1552835269888,["28447@DESKTOP-BE7HQ26",[[-1,595,"ke"]],[597,597],[595,595]]],[1552835284596,["28447@DESKTOP-BE7HQ26",[[1,595,"客户端根据namenode返回的"]],[595,595],[611,611]]],[1552835294285,["28447@DESKTOP-BE7HQ26",[[1,611,"datanode信息之际而发送给"]],[611,611],[627,627]]],[1552835296897,["28447@DESKTOP-BE7HQ26",[[-1,621,"之际而"]],[624,624],[621,621]]],[1552835299213,["28447@DESKTOP-BE7HQ26",[[1,621,"直接"]],[621,621],[623,623]]],[1552835330565,["28447@DESKTOP-BE7HQ26",[[1,626,"datanode 并且是流式写入，同时会赋值到其他"]],[626,626],[651,651]]],[1552835331915,["28447@DESKTOP-BE7HQ26",[[-1,646,"赋值到其他"]],[651,651],[646,646]]],[1552835340625,["28447@DESKTOP-BE7HQ26",[[1,646,"复制到其他两台机器上"]],[646,646],[656,656]]],[1552835340962,["28447@DESKTOP-BE7HQ26",[[1,657,"  * \n"]],[656,656],[661,661]]],[1552835344490,["28447@DESKTOP-BE7HQ26",[[1,661,"datanode"]],[661,661],[669,669]]],[1552835346031,["28447@DESKTOP-BE7HQ26",[[1,669,"x"]],[669,669],[670,670]]],[1552835346542,["28447@DESKTOP-BE7HQ26",[[-1,669,"x"]],[670,670],[669,669]]],[1552835362975,["28447@DESKTOP-BE7HQ26",[[1,669,"向客户端通信表示已经穿万郴"]],[669,669],[682,682]]],[1552835363831,["28447@DESKTOP-BE7HQ26",[[-1,679,"穿万郴"]],[682,682],[679,679]]],[1552835370669,["28447@DESKTOP-BE7HQ26",[[1,679,"传完同时向name"]],[679,679],[688,688]]],[1552835370937,["28447@DESKTOP-BE7HQ26",[[-1,687,"e"]],[688,688],[687,687]]],[1552835377603,["28447@DESKTOP-BE7HQ26",[[1,687,"enode报告"]],[687,687],[694,694]]],[1552835377888,["28447@DESKTOP-BE7HQ26",[[1,695,"  * \n"]],[694,694],[699,699]]],[1552835381016,["28447@DESKTOP-BE7HQ26",[[1,595,"``"]],[595,595],[597,597]]],[1552835381911,["28447@DESKTOP-BE7HQ26",[[1,596,"4"]],[596,596],[597,597]]],[1552835385056,["28447@DESKTOP-BE7HQ26",[[1,598," "]],[598,598],[599,599]]],[1552835387562,["28447@DESKTOP-BE7HQ26",[[1,665,"``"]],[665,665],[667,667]]],[1552835388657,["28447@DESKTOP-BE7HQ26",[[1,666,"5"]],[666,666],[667,667]]],[1552835389094,["28447@DESKTOP-BE7HQ26",[[1,668," "]],[668,668],[669,669]]],[1552835390890,["28447@DESKTOP-BE7HQ26",[[1,707,"``"]],[707,707],[709,709]]],[1552835393201,["28447@DESKTOP-BE7HQ26",[[1,708,"6"]],[708,708],[709,709]]],[1552835398628,["28447@DESKTOP-BE7HQ26",[[1,710," y"]],[710,710],[712,712]]],[1552835399066,["28447@DESKTOP-BE7HQ26",[[-1,711,"y"]],[712,712],[711,711]]],[1552835403455,["28447@DESKTOP-BE7HQ26",[[1,711,"依照上述"]],[711,711],[715,715]]],[1552835409118,["28447@DESKTOP-BE7HQ26",[[1,715," ·"]],[715,715],[717,717]]],[1552835409841,["28447@DESKTOP-BE7HQ26",[[-1,716,"·"]],[717,717],[716,716]]],[1552835410542,["28447@DESKTOP-BE7HQ26",[[1,716,"``"]],[716,716],[718,718]]],[1552835411654,["28447@DESKTOP-BE7HQ26",[[1,717,"4"]],[717,717],[718,718]]],[1552835412761,["28447@DESKTOP-BE7HQ26",[[1,719,"he"]],[719,719],[721,721]]],[1552835413362,["28447@DESKTOP-BE7HQ26",[[-1,719,"he"]],[721,721],[719,719]]],[1552835414726,["28447@DESKTOP-BE7HQ26",[[1,719,"和"]],[719,719],[720,720]]],[1552835417389,["28447@DESKTOP-BE7HQ26",[[-1,718,"`"]],[719,719],[718,718]]],[1552835418323,["28447@DESKTOP-BE7HQ26",[[-1,716,"`"]],[717,717],[716,716]]],[1552835420354,["28447@DESKTOP-BE7HQ26",[[1,717," "]],[717,717],[718,718]]],[1552835422627,["28447@DESKTOP-BE7HQ26",[[1,719," 5"]],[719,719],[721,721]]],[1552835427213,["28447@DESKTOP-BE7HQ26",[[1,716,"("]],[716,716],[717,717]]],[1552835438139,["28447@DESKTOP-BE7HQ26",[[1,722,")的原理将所哟的数据块"]],[722,722],[733,733]]],[1552835440016,["28447@DESKTOP-BE7HQ26",[[-1,727,"所哟"]],[729,729],[727,727]]],[1552835441818,["28447@DESKTOP-BE7HQ26",[[1,727,"所有"]],[727,727],[729,729]]],[1552835448270,["28447@DESKTOP-BE7HQ26",[[1,733,"都上传到"]],[733,733],[737,737]]],[1552835450450,["28447@DESKTOP-BE7HQ26",[[-1,736,"到"]],[737,737],[736,736]]],[1552835456974,["28447@DESKTOP-BE7HQ26",[[1,736,"借宿向namenodebao"]],[736,736],[750,750]]],[1552835457809,["28447@DESKTOP-BE7HQ26",[[-1,747,"bao"]],[750,750],[747,747]]],[1552835463992,["28447@DESKTOP-BE7HQ26",[[1,747,"报告表明"]],[747,747],[751,751]]],[1552835474344,["28447@DESKTOP-BE7HQ26",[[1,751,"已经传完所有的数据块"]],[751,751],[761,761]]],[1552835477944,["28447@DESKTOP-BE7HQ26",[[-1,736,"借宿"]],[738,738],[736,736]]],[1552835480956,["28447@DESKTOP-BE7HQ26",[[1,736,"完成 "]],[736,736],[739,739]]]],null,"28447@DESKTOP-BE7HQ26"],["1890b5aa-44ef-4845-bdfc-005f04b77e11",1552840162317,"# 面试题\n\n[toc]\n\n* 进程与线程的区别\n  *  狭义上讲进程是一段程序的执行过程，\n  * 在一个进程内部，需要同时执行多个子任务，我们将进程内的这些“子任务”称为线程（Thread）\n\n\n*  多线程通信和同步机制：加锁、信号量、条件变量\n\n\n\n*   多进程与多线程的区别\n\n*   共享内存、与malloc的区别\n\n*   HTTP和HTTP2的了解\n\n*   TCP与UDP的区别\n\n*   查找的常用数据结构：二叉树、跳表、hash\n\n*   类中一般包括哪些默认生成的函数：构造、析构、复制构造、赋值操作符、取地址操作符等\n\n*   常用的STL数据结构、Vector、Map的底层实现\n\n*   Top k问题\n\n*   常用的调试方法和工具\n\n*   现有开源分布式存储的系统或协议是否了解？\n\n*   分布式存储系统相关问题：数据同步、单点故障、副本容灾、读写一致性等\n\n* kafka集群的规模，消费速度是多少\n  * 一般中小公司的是10个节点，每秒20M\n  \n* hdfs上传文件过程 \n  * `1` 客户端向namenode节点发送请求\n  * `2` namenode 向客户端返回可以存数据的DataNode\n  * `3` 客户端首先根据返回的信息，先将文件分块（Hadoop2.X版本每个block为128M,之前的版本为64M）\n  * `4` 客户端根据namenode返回的datanode信息直接发送给datanode 并且是流式写入，同时会复制到其他两台机器上\n  * `5` datanode向客户端通信表示已经传完同时向namenode报告\n  * `6` 依照上述 (4 和 5)的原理将所有的数据块都上传完成 向namenode报告表明已经传完所有的数据块\n\n\n",[[1552840138335,["28447@DESKTOP-BE7HQ26",[[1,765,"\n"]],[763,763],[764,764]]],[1552840156714,["28447@DESKTOP-BE7HQ26",[[1,764,"* 讲诉以下"]],[764,764],[770,770]]],[1552840158001,["28447@DESKTOP-BE7HQ26",[[-1,768,"以下"]],[770,770],[768,768]]],[1552840159803,["28447@DESKTOP-BE7HQ26",[[1,768,"一下"]],[768,768],[770,770]]],[1552840168604,["28447@DESKTOP-BE7HQ26",[[1,770,"mapreduced"]],[770,770],[780,780]]],[1552840169225,["28447@DESKTOP-BE7HQ26",[[-1,779,"d"]],[780,780],[779,779]]],[1552840175047,["28447@DESKTOP-BE7HQ26",[[1,779,"的流程（）"]],[779,779],[784,784]]],[1552840180750,["28447@DESKTOP-BE7HQ26",[[1,783,"shuffled"]],[783,783],[791,791]]],[1552840181208,["28447@DESKTOP-BE7HQ26",[[-1,790,"d"]],[791,791],[790,790]]],[1552840195502,["28447@DESKTOP-BE7HQ26",[[1,790,"的sort,parititions,group"]],[790,790],[813,813]]],[1552840197561,["28447@DESKTOP-BE7HQ26",[[1,815,"* \n"]],[814,814],[817,817]]],[1552840198477,["28447@DESKTOP-BE7HQ26",[[1,815,"  "]],[817,817],[819,819]]],[1552840500435,["28447@DESKTOP-BE7HQ26",[[1,819,"lu"]],[819,819],[821,821]]],[1552840501092,["28447@DESKTOP-BE7HQ26",[[-1,819,"lu"]],[821,821],[819,819]]],[1552840503397,["28447@DESKTOP-BE7HQ26",[[1,819,"略"]],[819,819],[820,820]]],[1552840503760,["28447@DESKTOP-BE7HQ26",[[1,821,"  * \n"]],[820,820],[825,825]]],[1552840504517,["28447@DESKTOP-BE7HQ26",[[-1,821,"  * "]],[825,825],[822,822]]],[1552840506089,["28447@DESKTOP-BE7HQ26",[[-1,822,"\n"],[1,823,"*"]],[822,822],[823,823]]],[1552840519454,["28447@DESKTOP-BE7HQ26",[[1,823," 了解zookeeper吗？介绍一下它，它的选举机制和集群的搭建。"]],[823,823],[856,856]]],[1552840521451,["28447@DESKTOP-BE7HQ26",[[1,856,"\n* "]],[856,856],[859,859]]],[1552840522203,["28447@DESKTOP-BE7HQ26",[[1,857,"  "]],[859,859],[861,861]]],[1552840545820,["28447@DESKTOP-BE7HQ26",[[1,861,"答：那当然是熟悉啦，ZooKeeper 是一个开源的分布式协调服务，是 Google Chubby 的开源实现。分布式应用程序可以基于 ZooKeeper 实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master 选举、分布式锁和分布式队列等功能。我们公司使用的flume集群，Kafka集群等等，都离不开ZooKeeper呀。每个节点上我们都要搭建ZooKeeper服务。首先我们要在每台pc上配置zookeeper环境变量，在cd到zookeeper下的conf文件夹下在zoo_simjle.cfg文件中添加datadir路径，再到zookeeper下新建data文件夹，创建myid，在文件里添加上server的ip地址。在启动zkserver.sh start便ok了。\n  * "]],[861,861],[1220,1220]]],[1552840546627,["28447@DESKTOP-BE7HQ26",[[-1,1216,"  * "],[1,1220,"\n\n"]],[1220,1220],[1217,1217]]],[1552840547912,["28447@DESKTOP-BE7HQ26",[[-1,1217,"\n"],[1,1218,"*"]],[1217,1217],[1218,1218]]],[1552840554263,["28447@DESKTOP-BE7HQ26",[[1,1218," mysql，mongodb，rides的端口\n* "]],[1218,1218],[1244,1244]]],[1552840555310,["28447@DESKTOP-BE7HQ26",[[1,1242,"  "]],[1244,1244],[1246,1246]]],[1552840563377,["28447@DESKTOP-BE7HQ26",[[1,1246,"mysql：3306，mongdb：27017，rides：6379\n  * "]],[1246,1246],[1285,1285]]],[1552840563815,["28447@DESKTOP-BE7HQ26",[[-1,1281,"  * "],[1,1285,"\n\n"]],[1285,1285],[1282,1282]]],[1552840575847,["28447@DESKTOP-BE7HQ26",[[1,1283,"\n"]],[1281,1281],[1282,1282]]],[1552840577431,["28447@DESKTOP-BE7HQ26",[[1,1282,"* 说一下你对hadoop生态圈的认识"]],[1282,1282],[1301,1301]]],[1552840577986,["28447@DESKTOP-BE7HQ26",[[1,1302,"* \n"]],[1301,1301],[1304,1304]]],[1552840578920,["28447@DESKTOP-BE7HQ26",[[1,1302,"  "]],[1304,1304],[1306,1306]]],[1552840584323,["28447@DESKTOP-BE7HQ26",[[1,1306,"没有固定答案，主要从hdfs底层存储，hbase数据库，hive数据仓库，flume收集，Kafka缓存，zookeeper分布式协调服务，spark大数据分析，sqoop数据互转来说"]],[1306,1306],[1398,1398]]],[1552840586377,["28447@DESKTOP-BE7HQ26",[[1,1399,"  * \n"]],[1398,1398],[1403,1403]]],[1552840586791,["28447@DESKTOP-BE7HQ26",[[-1,1399,"  * "]],[1403,1403],[1400,1400]]],[1552840635694,["28447@DESKTOP-BE7HQ26",[[1,1401,"\n"]],[1399,1399],[1400,1400]]],[1552840640045,["28447@DESKTOP-BE7HQ26",[[1,1400,"* yarn的"]],[1400,1400],[1407,1407]]],[1552840641686,["28447@DESKTOP-BE7HQ26",[[1,1407,"理解"]],[1407,1407],[1409,1409]]],[1552840642107,["28447@DESKTOP-BE7HQ26",[[1,1410,"* \n"]],[1409,1409],[1412,1412]]],[1552840642900,["28447@DESKTOP-BE7HQ26",[[1,1410,"  "]],[1412,1412],[1414,1414]]],[1552840652257,["28447@DESKTOP-BE7HQ26",[[1,1414,"YARN是Hadoop2.0版本引进的资源管理系统，直接从MR1演化而来。 \n核心思想：将MR1中的JobTracker的资源管理和作业调度两个功能分开，分别由ResourceManager和ApplicationMaster进程实现。\n\nResourceManager：负责整个集群的资源管理和调度 ApplicationMaster：负责应用程序相关事务，比如任务调度、任务监控和容错等。 YARN的出现，使得多个计算框架可以运行在同一个集群之中。 1\\. 每一个应用程序对应一个ApplicationMaster。 2\\. 目前可以支持多种计算框架运行在YARN上面，比如MapReduce、storm、Spark、Flink。"]],[1414,1414],[1731,1731]]],[1552840681671,["28447@DESKTOP-BE7HQ26",[[-1,1451," "],[1,1452," "],[1,1534,"* "]],[1534,1534],[1536,1536]]],[1552840683037,["28447@DESKTOP-BE7HQ26",[[1,1534,"  "]],[1534,1534],[1536,1536]]],[1552840697995,["28447@DESKTOP-BE7HQ26",[[1,1737,"\n"]],[1736,1736],[1737,1737]]],[1552840747672,["28447@DESKTOP-BE7HQ26",[[-1,1737,"\n"],[1,1738,"*"]],[1737,1737],[1738,1738]]],[1552840755937,["28447@DESKTOP-BE7HQ26",[[1,1738," 数据来源的啊方式"]],[1738,1738],[1747,1747]]],[1552840758292,["28447@DESKTOP-BE7HQ26",[[-1,1744,"啊"]],[1745,1745],[1744,1744]]],[1552840759482,["28447@DESKTOP-BE7HQ26",[[1,1746,"\n* "]],[1746,1746],[1749,1749]]],[1552840759752,["28447@DESKTOP-BE7HQ26",[[-1,1747,"* "],[1,1749,"\n\n"]],[1749,1749],[1748,1748]]],[1552840760549,["28447@DESKTOP-BE7HQ26",[[-1,1748,"\n"]],[1748,1748],[1747,1747]]],[1552840760909,["28447@DESKTOP-BE7HQ26",[[1,1747,"  "]],[1747,1747],[1749,1749]]],[1552840762027,["28447@DESKTOP-BE7HQ26",[[-1,1748," "]],[1749,1749],[1748,1748]]],[1552840762929,["28447@DESKTOP-BE7HQ26",[[1,1748,"*"]],[1748,1748],[1749,1749]]],[1552840763900,["28447@DESKTOP-BE7HQ26",[[1,1748,"  "]],[1748,1748],[1750,1750]]],[1552840768233,["28447@DESKTOP-BE7HQ26",[[1,1751," ``"]],[1751,1751],[1754,1754]]],[1552840769136,["28447@DESKTOP-BE7HQ26",[[1,1753,"1"]],[1753,1753],[1754,1754]]],[1552840775511,["28447@DESKTOP-BE7HQ26",[[1,1755," webServer ：用户访问我们的网站，对日志进行收集，记录在反向的日志文件里 tomcat下logs"]],[1755,1755],[1808,1808]]],[1552840777259,["28447@DESKTOP-BE7HQ26",[[1,1809,"   * \n"]],[1808,1808],[1814,1814]]],[1552840779079,["28447@DESKTOP-BE7HQ26",[[1,1814,"``"]],[1814,1814],[1816,1816]]],[1552840779918,["28447@DESKTOP-BE7HQ26",[[1,1815,"2"]],[1815,1815],[1816,1816]]],[1552840788327,["28447@DESKTOP-BE7HQ26",[[1,1817," js代码嵌入前端页面（埋点）：js的sdk会获取用户行为，document会得到元素调用function，通过ngix集群进行日志收集"]],[1817,1817],[1885,1885]]],[1552840799910,["28447@DESKTOP-BE7HQ26",[[1,1876,"n"]],[1876,1876],[1877,1877]]],[1552840815575,["28447@DESKTOP-BE7HQ26",[[1,1887,"   * \n"]],[1886,1886],[1892,1892]]],[1552840815783,["28447@DESKTOP-BE7HQ26",[[-1,1887,"   * "]],[1892,1892],[1888,1888]]],[1552840817150,["28447@DESKTOP-BE7HQ26",[[1,1888,"\n"]],[1888,1888],[1889,1889]]],[1552840818055,["28447@DESKTOP-BE7HQ26",[[-1,1888,"\n"],[1,1889,"*"]],[1889,1889],[1889,1889]]],[1552840819191,["28447@DESKTOP-BE7HQ26",[[1,1889," l"]],[1889,1889],[1891,1891]]],[1552840819907,["28447@DESKTOP-BE7HQ26",[[-1,1890,"l"]],[1891,1891],[1890,1890]]],[1552840825613,["28447@DESKTOP-BE7HQ26",[[1,1890,"聊聊项目\n* "]],[1890,1890],[1897,1897]]],[1552840826401,["28447@DESKTOP-BE7HQ26",[[1,1895,"  "]],[1897,1897],[1899,1899]]],[1552840827669,["28447@DESKTOP-BE7HQ26",[[1,1899,".聊聊你的项目"]],[1899,1899],[1906,1906]]],[1552840829209,["28447@DESKTOP-BE7HQ26",[[-1,1899,".聊聊你的项目"]],[1906,1906],[1899,1899]]],[1552840839716,["28447@DESKTOP-BE7HQ26",[[1,1899,"你一定要把自己的项目了解搞清楚，数据的来源，数据的收集，数据的分析，数据的储存，数据的展示。\n\n主要解决了啥业务。遇到了啥问题，数据的格式，有哪些优化，等等等"]],[1899,1899],[1978,1978]]],[1552840842189,["28447@DESKTOP-BE7HQ26",[[-1,1946,"\n"]],[1947,1947],[1946,1946]]],[1552840845853,["28447@DESKTOP-BE7HQ26",[[1,1946,"*"]],[1946,1946],[1947,1947]]],[1552840846998,["28447@DESKTOP-BE7HQ26",[[1,1946,"  "]],[1946,1946],[1948,1948]]],[1552840848572,["28447@DESKTOP-BE7HQ26",[[1,1949," "]],[1949,1949],[1950,1950]]]],null,"28447@DESKTOP-BE7HQ26"],["5ad4c028-2862-4c8a-8d38-95da7cdb7de8",1554048741300,"# 面试题\n\n[toc]\n\n* 进程与线程的区别\n  *  狭义上讲进程是一段程序的执行过程，\n  * 在一个进程内部，需要同时执行多个子任务，我们将进程内的这些“子任务”称为线程（Thread）\n\n\n*  多线程通信和同步机制：加锁、信号量、条件变量\n\n\n\n*   多进程与多线程的区别\n\n*   共享内存、与malloc的区别\n\n*   HTTP和HTTP2的了解\n\n*   TCP与UDP的区别\n\n*   查找的常用数据结构：二叉树、跳表、hash\n\n*   类中一般包括哪些默认生成的函数：构造、析构、复制构造、赋值操作符、取地址操作符等\n\n*   常用的STL数据结构、Vector、Map的底层实现\n\n*   Top k问题\n\n*   常用的调试方法和工具\n\n*   现有开源分布式存储的系统或协议是否了解？\n\n*   分布式存储系统相关问题：数据同步、单点故障、副本容灾、读写一致性等\n\n* kafka集群的规模，消费速度是多少\n  * 一般中小公司的是10个节点，每秒20M\n  \n* hdfs上传文件过程 \n  * `1` 客户端向namenode节点发送请求\n  * `2` namenode 向客户端返回可以存数据的DataNode\n  * `3` 客户端首先根据返回的信息，先将文件分块（Hadoop2.X版本每个block为128M,之前的版本为64M）\n  * `4` 客户端根据namenode返回的datanode信息直接发送给datanode 并且是流式写入，同时会复制到其他两台机器上\n  * `5` datanode向客户端通信表示已经传完同时向namenode报告\n  * `6` 依照上述 (4 和 5)的原理将所有的数据块都上传完成 向namenode报告表明已经传完所有的数据块\n\n* 讲诉一下mapreduce的流程（shuffle的sort,parititions,group）\n  * 略\n\n* 了解zookeeper吗？介绍一下它，它的选举机制和集群的搭建。\n  * 答：那当然是熟悉啦，ZooKeeper 是一个开源的分布式协调服务，是 Google Chubby 的开源实现。分布式应用程序可以基于 ZooKeeper 实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master 选举、分布式锁和分布式队列等功能。我们公司使用的flume集群，Kafka集群等等，都离不开ZooKeeper呀。每个节点上我们都要搭建ZooKeeper服务。首先我们要在每台pc上配置zookeeper环境变量，在cd到zookeeper下的conf文件夹下在zoo_simjle.cfg文件中添加datadir路径，再到zookeeper下新建data文件夹，创建myid，在文件里添加上server的ip地址。在启动zkserver.sh start便ok了。\n\n* mysql，mongodb，rides的端口\n  * mysql：3306，mongdb：27017，rides：6379\n\n* 说一下你对hadoop生态圈的认识\n  * 没有固定答案，主要从hdfs底层存储，hbase数据库，hive数据仓库，flume收集，Kafka缓存，zookeeper分布式协调服务，spark大数据分析，sqoop数据互转来说\n\n* yarn的理解\n  * YARN是Hadoop2.0版本引进的资源管理系统，直接从MR1演化而来。 \n核心思想：将MR1中的JobTracker的资源管理和作业调度两个功能分开，分别由ResourceManager和ApplicationMaster进程实现。\n\n  * ResourceManager：负责整个集群的资源管理和调度 ApplicationMaster：负责应用程序相关事务，比如任务调度、任务监控和容错等。 YARN的出现，使得多个计算框架可以运行在同一个集群之中。 1\\. 每一个应用程序对应一个ApplicationMaster。 2\\. 目前可以支持多种计算框架运行在YARN上面，比如MapReduce、storm、Spark、Flink。\n\n* 数据来源的方式\n   * `1` webServer ：用户访问我们的网站，对日志进行收集，记录在反向的日志文件里 tomcat下logs\n   * `2` js代码嵌入前端页面（埋点）：js的sdk会获取用户行为，document会得到元素调用function，通过nginx集群进行日志收集\n\n* 聊聊项目\n  * 你一定要把自己的项目了解搞清楚，数据的来源，数据的收集，数据的分析，数据的储存，数据的展示。\n  * 主要解决了啥业务。遇到了啥问题，数据的格式，有哪些优化，等等等",[[1554048738430,["28447@DESKTOP-BE7HQ26",[[-1,767,"诉"]],[768,768],[767,767]]]],null,"28447@DESKTOP-BE7HQ26"]]}